

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Sun May 24 16:19:59 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataCOMRAM
    37  007485                     __pidataCOMRAM:
    38                           	opt stack 0
    39                           
    40                           ;initializer for _R
    41  007485  0FDF               	dw	4063
    42                           
    43                           ;initializer for _kl
    44  007487  0001               	dw	1
    45                           
    46                           ;initializer for _REG
    47  007489  0F                 	db	15
    48                           
    49                           ;initializer for _REGad
    50  00748A  DF                 	db	223
    51                           
    52                           ;initializer for _abre1
    53  00748B  0E                 	db	14
    54  00748C  1C                 	db	28
    55  00748D  18                 	db	24
    56  00748E  10                 	db	16
    57  00748F  18                 	db	24
    58  007490  1C                 	db	28
    59  007491  0E                 	db	14
    60  007492  00                 	db	0
    61                           
    62                           ;initializer for _abre2
    63  007493  0E                 	db	14
    64  007494  07                 	db	7
    65  007495  03                 	db	3
    66  007496  01                 	db	1
    67  007497  03                 	db	3
    68  007498  07                 	db	7
    69  007499  0E                 	db	14
    70  00749A  00                 	db	0
    71                           
    72                           ;initializer for _fecha1
    73  00749B  00                 	db	0
    74  00749C  1E                 	db	30
    75  00749D  1F                 	db	31
    76  00749E  10                 	db	16
    77  00749F  1F                 	db	31
    78  0074A0  1E                 	db	30
    79  0074A1  00                 	db	0
    80  0074A2  00                 	db	0
    81                           
    82                           ;initializer for _fecha2
    83  0074A3  00                 	db	0
    84  0074A4  0F                 	db	15
    85  0074A5  1F                 	db	31
    86  0074A6  01                 	db	1
    87  0074A7  1F                 	db	31
    88  0074A8  0F                 	db	15
    89  0074A9  00                 	db	0
    90  0074AA  00                 	db	0
    91                           
    92                           ;initializer for _b1
    93  0074AB  04                 	db	4
    94  0074AC  15                 	db	21
    95  0074AD  0E                 	db	14
    96  0074AE  04                 	db	4
    97  0074AF  0A                 	db	10
    98  0074B0  0A                 	db	10
    99  0074B1  0A                 	db	10
   100  0000                     _ADRES	set	4035
   101  0000                     _ADCON0	set	4034
   102  0000                     _ADCON0bits	set	4034
   103  0000                     _ADCON1	set	4033
   104  0000                     _ADCON2	set	4032
   105  0000                     _ADCON2bits	set	4032
   106  0000                     _ADRESH	set	4036
   107  0000                     _BAUDCON	set	4024
   108  0000                     _BAUDCONbits	set	4024
   109  0000                     _CCP1CON	set	4029
   110  0000                     _CCP2CON	set	4026
   111  0000                     _CCPR1L	set	4030
   112  0000                     _CCPR2L	set	4027
   113  0000                     _EEADR	set	4009
   114  0000                     _EECON1	set	4006
   115  0000                     _EECON1bits	set	4006
   116  0000                     _EECON2	set	4007
   117  0000                     _EEDATA	set	4008
   118  0000                     _INTCON2bits	set	4081
   119  0000                     _INTCON3bits	set	4080
   120  0000                     _INTCONbits	set	4082
   121  0000                     _IPR1bits	set	3999
   122  0000                     _LATA	set	3977
   123  0000                     _LATB	set	3978
   124  0000                     _LATBbits	set	3978
   125  0000                     _LATC	set	3979
   126  0000                     _PIE1bits	set	3997
   127  0000                     _PIE2bits	set	4000
   128  0000                     _PORTAbits	set	3968
   129  0000                     _PORTBbits	set	3969
   130  0000                     _PORTCbits	set	3970
   131  0000                     _PORTDbits	set	3971
   132  0000                     _PR2	set	4043
   133  0000                     _RCONbits	set	4048
   134  0000                     _RCSTA	set	4011
   135  0000                     _SPBRG	set	4015
   136  0000                     _SPBRGH	set	4016
   137  0000                     _T0CON	set	4053
   138  0000                     _T0CONbits	set	4053
   139  0000                     _T1CONbits	set	4045
   140  0000                     _T2CON	set	4042
   141  0000                     _T2CONbits	set	4042
   142  0000                     _T3CONbits	set	4017
   143  0000                     _TMR0H	set	4055
   144  0000                     _TMR0L	set	4054
   145  0000                     _TMR1H	set	4047
   146  0000                     _TMR1L	set	4046
   147  0000                     _TMR3H	set	4019
   148  0000                     _TMR3L	set	4018
   149  0000                     _TRISA	set	3986
   150  0000                     _TRISAbits	set	3986
   151  0000                     _TRISB	set	3987
   152  0000                     _TRISBbits	set	3987
   153  0000                     _TRISC	set	3988
   154  0000                     _TRISCbits	set	3988
   155  0000                     _TRISDbits	set	3989
   156  0000                     _TXREG	set	4013
   157  0000                     _TXSTA	set	4012
   158  0000                     _TXSTAbits	set	4012
   159  0000                     _WDTCONbits	set	4049
   160                           
   161                           	psect	smallconst
   162  00101C                     __psmallconst:
   163                           	opt stack 0
   164  00101C  00                 	db	0
   165  00101D                     __stringdata:
   166                           	opt stack 0
   167  00101D                     STR_1:
   168  00101D  53                 	db	83	;'S'
   169  00101E  61                 	db	97	;'a'
   170  00101F  6E                 	db	110	;'n'
   171  001020  55                 	db	85	;'U'
   172  001021  53                 	db	83	;'S'
   173  001022  42                 	db	66	;'B'
   174  001023  20                 	db	32
   175  001024  70                 	db	112	;'p'
   176  001025  69                 	db	105	;'i'
   177  001026  73                 	db	115	;'s'
   178  001027  63                 	db	99	;'c'
   179  001028  61                 	db	97	;'a'
   180  001029  20                 	db	32
   181  00102A  6F                 	db	111	;'o'
   182  00102B  00                 	db	0
   183  00102C                     STR_2:
   184  00102C  4C                 	db	76	;'L'
   185  00102D  65                 	db	101	;'e'
   186  00102E  64                 	db	100	;'d'
   187  00102F  20                 	db	32
   188  001030  70                 	db	112	;'p'
   189  001031  72                 	db	114	;'r'
   190  001032  61                 	db	97	;'a'
   191  001033  20                 	db	32
   192  001034  76                 	db	118	;'v'
   193  001035  6F                 	db	111	;'o'
   194  001036  63                 	db	99	;'c'
   195  001037  65                 	db	101	;'e'
   196  001038  20                 	db	32
   197  001039  00                 	db	0
   198  00103A                     __end_of__stringdata:
   199                           	opt stack 0
   200  00103A  00                 	db	0	; dummy byte at the end
   201  0000                     
   202                           ; #config settings
   203                           
   204                           	psect	cinit
   205  0074EC                     __pcinit:
   206                           	opt stack 0
   207  0074EC                     start_initialization:
   208                           	opt stack 0
   209  0074EC                     __initialization:
   210                           	opt stack 0
   211                           
   212                           ; Clear objects allocated to BANK0 (20 bytes)
   213  0074EC  EE00  F060         	lfsr	0,__pbssBANK0
   214  0074F0  0E14               	movlw	20
   215  0074F2                     clear_0:
   216  0074F2  6AEE               	clrf	postinc0,c
   217  0074F4  06E8               	decf	wreg,f,c
   218  0074F6  E1FD               	bnz	clear_0
   219                           
   220                           ; Clear objects allocated to COMRAM (12 bytes)
   221  0074F8  EE00  F04D         	lfsr	0,__pbssCOMRAM
   222  0074FC  0E0C               	movlw	12
   223  0074FE                     clear_1:
   224  0074FE  6AEE               	clrf	postinc0,c
   225  007500  06E8               	decf	wreg,f,c
   226  007502  E1FD               	bnz	clear_1
   227                           
   228                           ; Initialize objects allocated to COMRAM (45 bytes)
   229                           ; load TBLPTR registers with __pidataCOMRAM
   230  007504  0E85               	movlw	low __pidataCOMRAM
   231  007506  6EF6               	movwf	tblptrl,c
   232  007508  0E74               	movlw	high __pidataCOMRAM
   233  00750A  6EF7               	movwf	tblptrh,c
   234  00750C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   235  00750E  6EF8               	movwf	tblptru,c
   236  007510  EE00  F001         	lfsr	0,__pdataCOMRAM
   237  007514  EE10 F02D          	lfsr	1,45
   238  007518                     copy_data0:
   239  007518  0009               	tblrd		*+
   240  00751A  CFF5 FFEE          	movff	tablat,postinc0
   241  00751E  50E5               	movf	postdec1,w,c
   242  007520  50E1               	movf	fsr1l,w,c
   243  007522  E1FA               	bnz	copy_data0
   244  007524                     end_of_initialization:
   245                           	opt stack 0
   246  007524                     __end_of__initialization:
   247                           	opt stack 0
   248  007524  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249  007526  6EF8               	movwf	tblptru,c
   250  007528  0100               	movlb	0
   251  00752A  EFE0  F03E         	goto	_main	;jump to C main() function
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           postdec1	equ	0xFE5
   259                           fsr1l	equ	0xFE1
   260                           
   261                           	psect	bssCOMRAM
   262  00004D                     __pbssCOMRAM:
   263                           	opt stack 0
   264  00004D                     _i:
   265                           	opt stack 0
   266  00004D                     	ds	2
   267  00004F                     _k:
   268                           	opt stack 0
   269  00004F                     	ds	1
   270  000050                     _s:
   271                           	opt stack 0
   272  000050                     	ds	1
   273  000051                     _vazio:
   274                           	opt stack 0
   275  000051                     	ds	8
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           postdec1	equ	0xFE5
   283                           fsr1l	equ	0xFE1
   284                           
   285                           	psect	dataCOMRAM
   286  000001                     __pdataCOMRAM:
   287                           	opt stack 0
   288  000001                     _R:
   289                           	opt stack 0
   290  000001                     	ds	2
   291  000003                     _kl:
   292                           	opt stack 0
   293  000003                     	ds	2
   294  000005                     _REG:
   295                           	opt stack 0
   296  000005                     	ds	1
   297  000006                     _REGad:
   298                           	opt stack 0
   299  000006                     	ds	1
   300  000007                     _abre1:
   301                           	opt stack 0
   302  000007                     	ds	8
   303  00000F                     _abre2:
   304                           	opt stack 0
   305  00000F                     	ds	8
   306  000017                     _fecha1:
   307                           	opt stack 0
   308  000017                     	ds	8
   309  00001F                     _fecha2:
   310                           	opt stack 0
   311  00001F                     	ds	8
   312  000027                     _b1:
   313                           	opt stack 0
   314  000027                     	ds	7
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           postdec1	equ	0xFE5
   322                           fsr1l	equ	0xFE1
   323                           
   324                           	psect	bssBANK0
   325  000060                     __pbssBANK0:
   326                           	opt stack 0
   327  000060                     _buffer1:
   328                           	opt stack 0
   329  000060                     	ds	20
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           postdec1	equ	0xFE5
   337                           fsr1l	equ	0xFE1
   338                           
   339                           	psect	cstackCOMRAM
   340  00002E                     __pcstackCOMRAM:
   341                           	opt stack 0
   342  00002E                     ??_interrupcao:
   343  00002E                     
   344                           ; 1 bytes @ 0x0
   345  00002E                     	ds	14
   346  00003C                     ?___awdiv:
   347                           	opt stack 0
   348  00003C                     ?___awmod:
   349                           	opt stack 0
   350  00003C                     ?___wmul:
   351                           	opt stack 0
   352  00003C                     habilita_canal_AD@canal:
   353                           	opt stack 0
   354  00003C                     le_eeprom@endereco:
   355                           	opt stack 0
   356  00003C                     Delay1KTCYx@unit:
   357                           	opt stack 0
   358  00003C                     inverte_saida@pino:
   359                           	opt stack 0
   360  00003C                     ___awdiv@dividend:
   361                           	opt stack 0
   362  00003C                     ___awmod@dividend:
   363                           	opt stack 0
   364  00003C                     ___wmul@multiplier:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0xE
   368  00003C                     	ds	1
   369  00003D                     ??_Lcd_Cmd:
   370  00003D                     ??_Lcd_Chr_CP:
   371  00003D                     
   372                           ; 0 bytes @ 0xF
   373  00003D                     	ds	1
   374  00003E                     ??_inverte_saida:
   375  00003E                     ___awdiv@divisor:
   376                           	opt stack 0
   377  00003E                     ___awmod@divisor:
   378                           	opt stack 0
   379  00003E                     ___wmul@multiplicand:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x10
   383  00003E                     	ds	1
   384  00003F                     Lcd_Chr_CP@Chr_CP:
   385                           	opt stack 0
   386  00003F                     Lcd_Cmd@Cmd:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x11
   390  00003F                     	ds	1
   391  000040                     ??___awdiv:
   392  000040                     ??___awmod:
   393  000040                     lcd_escreve@x:
   394                           	opt stack 0
   395  000040                     Lcd_Chr@x:
   396                           	opt stack 0
   397  000040                     CGRAM_SanUSB@ptr:
   398                           	opt stack 0
   399  000040                     ___wmul@product:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x12
   403  000040                     	ds	1
   404  000041                     Lcd_Chr@Chr:
   405                           	opt stack 0
   406  000041                     ___awdiv@counter:
   407                           	opt stack 0
   408  000041                     ___awmod@counter:
   409                           	opt stack 0
   410  000041                     lcd_escreve@buffer:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x13
   414  000041                     	ds	1
   415  000042                     ??_CGRAM_SanUSB:
   416  000042                     Lcd_Chr@y:
   417                           	opt stack 0
   418  000042                     ___awdiv@sign:
   419                           	opt stack 0
   420  000042                     ___awmod@sign:
   421                           	opt stack 0
   422  000042                     tempo_ms@i:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x14
   426  000042                     	ds	1
   427  000043                     ?___lwdiv:
   428                           	opt stack 0
   429  000043                     lcd_escreve@y:
   430                           	opt stack 0
   431  000043                     Lcd_Chr@data:
   432                           	opt stack 0
   433  000043                     ___awdiv@quotient:
   434                           	opt stack 0
   435  000043                     ___lwdiv@dividend:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x15
   439  000043                     	ds	1
   440  000044                     lcd_escreve@data:
   441                           	opt stack 0
   442  000044                     tempo_ms@k:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x16
   446  000044                     	ds	1
   447  000045                     ??_lcd_ini:
   448  000045                     CGRAM_SanUSB@location:
   449                           	opt stack 0
   450  000045                     ___lwdiv@divisor:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x17
   454  000045                     	ds	1
   455  000046                     lcd_ini@data:
   456                           	opt stack 0
   457  000046                     CGRAM_SanUSB@i:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x18
   461  000046                     	ds	1
   462  000047                     ??___lwdiv:
   463  000047                     CGRAM_SanUSB@j:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x19
   467  000047                     	ds	1
   468  000048                     ___lwdiv@quotient:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x1A
   472  000048                     	ds	2
   473  00004A                     ___lwdiv@counter:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x1C
   477  00004A                     	ds	1
   478  00004B                     ??_main:
   479                           
   480                           ; 0 bytes @ 0x1D
   481  00004B                     	ds	2
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 19 in file "ExemploLCD_CGRAM.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;		None               void
   503 ;; Registers used:
   504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   510 ;;      Params:         0       0       0       0       0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0       0       0       0       0
   512 ;;      Temps:          2       0       0       0       0       0       0       0       0
   513 ;;      Totals:         2       0       0       0       0       0       0       0       0
   514 ;;Total ram usage:        2 bytes
   515 ;; Hardware stack levels required when called:    5
   516 ;; This function calls:
   517 ;;		_CGRAM_SanUSB
   518 ;;		_Lcd_Chr
   519 ;;		_Lcd_Cmd
   520 ;;		_clock_int_48MHz
   521 ;;		_habilita_canal_AD
   522 ;;		_inverte_saida
   523 ;;		_lcd_escreve
   524 ;;		_lcd_ini
   525 ;;		_tempo_ms
   526 ;; This function is called by:
   527 ;;		Startup code after reset
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text0
   532  007DC0                     __ptext0:
   533                           	opt stack 0
   534  007DC0                     _main:
   535                           	opt stack 26
   536                           
   537                           ;ExemploLCD_CGRAM.c: 20: clock_int_48MHz();
   538                           
   539                           ;incstack = 0
   540  007DC0  ECDF  F03A         	call	_clock_int_48MHz	;wreg free
   541                           
   542                           ;ExemploLCD_CGRAM.c: 21: habilita_canal_AD(0x0E);
   543  007DC4  0E0E               	movlw	14
   544  007DC6  EC2F  F03A         	call	_habilita_canal_AD
   545                           
   546                           ;ExemploLCD_CGRAM.c: 23: lcd_ini();
   547  007DCA  EC2F  F03D         	call	_lcd_ini	;wreg free
   548                           
   549                           ;ExemploLCD_CGRAM.c: 25: Lcd_Cmd(12);
   550  007DCE  0E0C               	movlw	12
   551  007DD0  ECB6  F03D         	call	_Lcd_Cmd
   552                           
   553                           ;ExemploLCD_CGRAM.c: 26: tempo_ms(100);
   554  007DD4  0E00               	movlw	0
   555  007DD6  6E43               	movwf	tempo_ms@i+1,c
   556  007DD8  0E64               	movlw	100
   557  007DDA  6E42               	movwf	tempo_ms@i,c
   558  007DDC  ECBB  F03A         	call	_tempo_ms	;wreg free
   559                           
   560                           ;ExemploLCD_CGRAM.c: 28: CGRAM_SanUSB(1,abre1);
   561  007DE0  0E00               	movlw	high _abre1
   562  007DE2  6E41               	movwf	CGRAM_SanUSB@ptr+1,c
   563  007DE4  0E07               	movlw	low _abre1
   564  007DE6  6E40               	movwf	CGRAM_SanUSB@ptr,c
   565  007DE8  0E01               	movlw	1
   566  007DEA  ECD0  F03B         	call	_CGRAM_SanUSB
   567                           
   568                           ;ExemploLCD_CGRAM.c: 29: tempo_ms(100);
   569  007DEE  0E00               	movlw	0
   570  007DF0  6E43               	movwf	tempo_ms@i+1,c
   571  007DF2  0E64               	movlw	100
   572  007DF4  6E42               	movwf	tempo_ms@i,c
   573  007DF6  ECBB  F03A         	call	_tempo_ms	;wreg free
   574                           
   575                           ;ExemploLCD_CGRAM.c: 30: CGRAM_SanUSB(2,fecha1);
   576  007DFA  0E00               	movlw	high _fecha1
   577  007DFC  6E41               	movwf	CGRAM_SanUSB@ptr+1,c
   578  007DFE  0E17               	movlw	low _fecha1
   579  007E00  6E40               	movwf	CGRAM_SanUSB@ptr,c
   580  007E02  0E02               	movlw	2
   581  007E04  ECD0  F03B         	call	_CGRAM_SanUSB
   582                           
   583                           ;ExemploLCD_CGRAM.c: 31: tempo_ms(100);
   584  007E08  0E00               	movlw	0
   585  007E0A  6E43               	movwf	tempo_ms@i+1,c
   586  007E0C  0E64               	movlw	100
   587  007E0E  6E42               	movwf	tempo_ms@i,c
   588  007E10  ECBB  F03A         	call	_tempo_ms	;wreg free
   589                           
   590                           ;ExemploLCD_CGRAM.c: 32: CGRAM_SanUSB(3,abre2);
   591  007E14  0E00               	movlw	high _abre2
   592  007E16  6E41               	movwf	CGRAM_SanUSB@ptr+1,c
   593  007E18  0E0F               	movlw	low _abre2
   594  007E1A  6E40               	movwf	CGRAM_SanUSB@ptr,c
   595  007E1C  0E03               	movlw	3
   596  007E1E  ECD0  F03B         	call	_CGRAM_SanUSB
   597                           
   598                           ;ExemploLCD_CGRAM.c: 33: tempo_ms(100);
   599  007E22  0E00               	movlw	0
   600  007E24  6E43               	movwf	tempo_ms@i+1,c
   601  007E26  0E64               	movlw	100
   602  007E28  6E42               	movwf	tempo_ms@i,c
   603  007E2A  ECBB  F03A         	call	_tempo_ms	;wreg free
   604                           
   605                           ;ExemploLCD_CGRAM.c: 34: CGRAM_SanUSB(4,fecha2);
   606  007E2E  0E00               	movlw	high _fecha2
   607  007E30  6E41               	movwf	CGRAM_SanUSB@ptr+1,c
   608  007E32  0E1F               	movlw	low _fecha2
   609  007E34  6E40               	movwf	CGRAM_SanUSB@ptr,c
   610  007E36  0E04               	movlw	4
   611  007E38  ECD0  F03B         	call	_CGRAM_SanUSB
   612                           
   613                           ;ExemploLCD_CGRAM.c: 35: tempo_ms(100);
   614  007E3C  0E00               	movlw	0
   615  007E3E  6E43               	movwf	tempo_ms@i+1,c
   616  007E40  0E64               	movlw	100
   617  007E42  6E42               	movwf	tempo_ms@i,c
   618  007E44  ECBB  F03A         	call	_tempo_ms	;wreg free
   619                           
   620                           ;ExemploLCD_CGRAM.c: 36: CGRAM_SanUSB(5,vazio);
   621  007E48  0E00               	movlw	high _vazio
   622  007E4A  6E41               	movwf	CGRAM_SanUSB@ptr+1,c
   623  007E4C  0E51               	movlw	low _vazio
   624  007E4E  6E40               	movwf	CGRAM_SanUSB@ptr,c
   625  007E50  0E05               	movlw	5
   626  007E52  ECD0  F03B         	call	_CGRAM_SanUSB
   627                           
   628                           ;ExemploLCD_CGRAM.c: 37: tempo_ms(100);
   629  007E56  0E00               	movlw	0
   630  007E58  6E43               	movwf	tempo_ms@i+1,c
   631  007E5A  0E64               	movlw	100
   632  007E5C  6E42               	movwf	tempo_ms@i,c
   633  007E5E  ECBB  F03A         	call	_tempo_ms	;wreg free
   634                           
   635                           ;ExemploLCD_CGRAM.c: 38: CGRAM_SanUSB(6,b1);
   636  007E62  0E00               	movlw	high _b1
   637  007E64  6E41               	movwf	CGRAM_SanUSB@ptr+1,c
   638  007E66  0E27               	movlw	low _b1
   639  007E68  6E40               	movwf	CGRAM_SanUSB@ptr,c
   640  007E6A  0E06               	movlw	6
   641  007E6C  ECD0  F03B         	call	_CGRAM_SanUSB
   642                           
   643                           ;ExemploLCD_CGRAM.c: 39: tempo_ms(100);
   644  007E70  0E00               	movlw	0
   645  007E72  6E43               	movwf	tempo_ms@i+1,c
   646  007E74  0E64               	movlw	100
   647  007E76  6E42               	movwf	tempo_ms@i,c
   648  007E78  ECBB  F03A         	call	_tempo_ms	;wreg free
   649  007E7C                     l2346:
   650                           
   651                           ;ExemploLCD_CGRAM.c: 42: lcd_escreve(1,1,"SanUSB pisca o");
   652  007E7C  6E4B               	movwf	??_main& (0+255),c
   653  007E7E  0E01               	movlw	1
   654  007E80  6E40               	movwf	lcd_escreve@x,c
   655  007E82  504B               	movf	??_main& (0+255),w,c
   656  007E84  0E10               	movlw	high STR_1
   657  007E86  6E42               	movwf	lcd_escreve@buffer+1,c
   658  007E88  0E1D               	movlw	low STR_1
   659  007E8A  6E41               	movwf	lcd_escreve@buffer,c
   660  007E8C  0E01               	movlw	1
   661  007E8E  EC9B  F03B         	call	_lcd_escreve
   662                           
   663                           ;ExemploLCD_CGRAM.c: 43: tempo_ms(500);
   664  007E92  0E01               	movlw	1
   665  007E94  6E43               	movwf	tempo_ms@i+1,c
   666  007E96  0EF4               	movlw	244
   667  007E98  6E42               	movwf	tempo_ms@i,c
   668  007E9A  ECBB  F03A         	call	_tempo_ms	;wreg free
   669                           
   670                           ;ExemploLCD_CGRAM.c: 44: lcd_escreve(2,1,"Led pra voce ");
   671  007E9E  6E4B               	movwf	??_main& (0+255),c
   672  007EA0  0E01               	movlw	1
   673  007EA2  6E40               	movwf	lcd_escreve@x,c
   674  007EA4  504B               	movf	??_main& (0+255),w,c
   675  007EA6  0E10               	movlw	high STR_2
   676  007EA8  6E42               	movwf	lcd_escreve@buffer+1,c
   677  007EAA  0E2C               	movlw	low STR_2
   678  007EAC  6E41               	movwf	lcd_escreve@buffer,c
   679  007EAE  0E02               	movlw	2
   680  007EB0  EC9B  F03B         	call	_lcd_escreve
   681                           
   682                           ;ExemploLCD_CGRAM.c: 45: tempo_ms(500);
   683  007EB4  0E01               	movlw	1
   684  007EB6  6E43               	movwf	tempo_ms@i+1,c
   685  007EB8  0EF4               	movlw	244
   686  007EBA  6E42               	movwf	tempo_ms@i,c
   687  007EBC  ECBB  F03A         	call	_tempo_ms	;wreg free
   688                           
   689                           ;ExemploLCD_CGRAM.c: 47: Lcd_Chr(2, 14, 6);
   690  007EC0  6E4B               	movwf	??_main& (0+255),c
   691  007EC2  0E0E               	movlw	14
   692  007EC4  6E40               	movwf	Lcd_Chr@x,c
   693  007EC6  504B               	movf	??_main& (0+255),w,c
   694  007EC8  6E4C               	movwf	(??_main+1)& (0+255),c
   695  007ECA  0E06               	movlw	6
   696  007ECC  6E41               	movwf	Lcd_Chr@Chr,c
   697  007ECE  504C               	movf	(??_main+1)& (0+255),w,c
   698  007ED0  0E02               	movlw	2
   699  007ED2  EC97  F03A         	call	_Lcd_Chr
   700                           
   701                           ;ExemploLCD_CGRAM.c: 48: tempo_ms(500);
   702  007ED6  0E01               	movlw	1
   703  007ED8  6E43               	movwf	tempo_ms@i+1,c
   704  007EDA  0EF4               	movlw	244
   705  007EDC  6E42               	movwf	tempo_ms@i,c
   706  007EDE  ECBB  F03A         	call	_tempo_ms	;wreg free
   707                           
   708                           ;ExemploLCD_CGRAM.c: 50: for (kl = 1; kl < 16; kl++) {
   709  007EE2  0E00               	movlw	0
   710  007EE4  6E04               	movwf	_kl+1,c
   711  007EE6  0E01               	movlw	1
   712  007EE8  6E03               	movwf	_kl,c
   713  007EEA  0E10               	movlw	16
   714  007EEC  5C03               	subwf	_kl,w,c
   715  007EEE  0E00               	movlw	0
   716  007EF0  5804               	subwfb	_kl+1,w,c
   717  007EF2  B0D8               	btfsc	status,0,c
   718  007EF4  D03C               	goto	l2376
   719                           
   720                           ;ExemploLCD_CGRAM.c: 51: Lcd_Chr(1, kl, 2);
   721  007EF6  C003  F040         	movff	_kl,Lcd_Chr@x
   722  007EFA  6E4B               	movwf	??_main& (0+255),c
   723  007EFC  0E02               	movlw	2
   724  007EFE  6E41               	movwf	Lcd_Chr@Chr,c
   725  007F00  504B               	movf	??_main& (0+255),w,c
   726  007F02  0E01               	movlw	1
   727  007F04  EC97  F03A         	call	_Lcd_Chr
   728                           
   729                           ;ExemploLCD_CGRAM.c: 52: tempo_ms(300);
   730  007F08  0E01               	movlw	1
   731  007F0A  6E43               	movwf	tempo_ms@i+1,c
   732  007F0C  0E2C               	movlw	44
   733  007F0E  6E42               	movwf	tempo_ms@i,c
   734  007F10  ECBB  F03A         	call	_tempo_ms	;wreg free
   735                           
   736                           ;ExemploLCD_CGRAM.c: 53: Lcd_Chr(1, kl, 1);
   737  007F14  C003  F040         	movff	_kl,Lcd_Chr@x
   738  007F18  6E4B               	movwf	??_main& (0+255),c
   739  007F1A  0E01               	movlw	1
   740  007F1C  6E41               	movwf	Lcd_Chr@Chr,c
   741  007F1E  504B               	movf	??_main& (0+255),w,c
   742  007F20  0E01               	movlw	1
   743  007F22  EC97  F03A         	call	_Lcd_Chr
   744                           
   745                           ;ExemploLCD_CGRAM.c: 54: tempo_ms(300);
   746  007F26  0E01               	movlw	1
   747  007F28  6E43               	movwf	tempo_ms@i+1,c
   748  007F2A  0E2C               	movlw	44
   749  007F2C  6E42               	movwf	tempo_ms@i,c
   750  007F2E  ECBB  F03A         	call	_tempo_ms	;wreg free
   751                           
   752                           ;ExemploLCD_CGRAM.c: 55: Lcd_Chr(1, kl, 5);
   753  007F32  C003  F040         	movff	_kl,Lcd_Chr@x
   754  007F36  6E4B               	movwf	??_main& (0+255),c
   755  007F38  0E05               	movlw	5
   756  007F3A  6E41               	movwf	Lcd_Chr@Chr,c
   757  007F3C  504B               	movf	??_main& (0+255),w,c
   758  007F3E  0E01               	movlw	1
   759  007F40  EC97  F03A         	call	_Lcd_Chr
   760                           
   761                           ;ExemploLCD_CGRAM.c: 56: tempo_ms(100);
   762  007F44  0E00               	movlw	0
   763  007F46  6E43               	movwf	tempo_ms@i+1,c
   764  007F48  0E64               	movlw	100
   765  007F4A  6E42               	movwf	tempo_ms@i,c
   766  007F4C  ECBB  F03A         	call	_tempo_ms	;wreg free
   767                           
   768                           ;ExemploLCD_CGRAM.c: 57: inverte_saida(31759);
   769  007F50  0E7C               	movlw	124
   770  007F52  6E3D               	movwf	inverte_saida@pino+1,c
   771  007F54  0E0F               	movlw	15
   772  007F56  6E3C               	movwf	inverte_saida@pino,c
   773  007F58  ECAC  F03C         	call	_inverte_saida	;wreg free
   774                           
   775                           ;ExemploLCD_CGRAM.c: 58: inverte_saida(31775);
   776  007F5C  0E7C               	movlw	124
   777  007F5E  6E3D               	movwf	inverte_saida@pino+1,c
   778  007F60  0E1F               	movlw	31
   779  007F62  6E3C               	movwf	inverte_saida@pino,c
   780  007F64  ECAC  F03C         	call	_inverte_saida	;wreg free
   781  007F68  4A03               	infsnz	_kl,f,c
   782  007F6A  2A04               	incf	_kl+1,f,c
   783  007F6C  D7BE               	goto	L1
   784  007F6E                     l2376:
   785                           
   786                           ;ExemploLCD_CGRAM.c: 59: }
   787                           ;ExemploLCD_CGRAM.c: 61: kl=16;
   788  007F6E  0E00               	movlw	0
   789  007F70  6E04               	movwf	_kl+1,c
   790  007F72  0E10               	movlw	16
   791  007F74  6E03               	movwf	_kl,c
   792                           
   793                           ;ExemploLCD_CGRAM.c: 62: for (kl = 16; kl > 0; kl--) {
   794  007F76  0E00               	movlw	0
   795  007F78  6E04               	movwf	_kl+1,c
   796  007F7A  0E10               	movlw	16
   797  007F7C  6E03               	movwf	_kl,c
   798  007F7E  5004               	movf	_kl+1,w,c
   799  007F80  1003               	iorwf	_kl,w,c
   800  007F82  B4D8               	btfsc	status,2,c
   801  007F84  D77B               	goto	l2346
   802                           
   803                           ;ExemploLCD_CGRAM.c: 63: Lcd_Chr(2, kl, 4);
   804  007F86  C003  F040         	movff	_kl,Lcd_Chr@x
   805  007F8A  6E4B               	movwf	??_main& (0+255),c
   806  007F8C  0E04               	movlw	4
   807  007F8E  6E41               	movwf	Lcd_Chr@Chr,c
   808  007F90  504B               	movf	??_main& (0+255),w,c
   809  007F92  0E02               	movlw	2
   810  007F94  EC97  F03A         	call	_Lcd_Chr
   811                           
   812                           ;ExemploLCD_CGRAM.c: 64: tempo_ms(300);
   813  007F98  0E01               	movlw	1
   814  007F9A  6E43               	movwf	tempo_ms@i+1,c
   815  007F9C  0E2C               	movlw	44
   816  007F9E  6E42               	movwf	tempo_ms@i,c
   817  007FA0  ECBB  F03A         	call	_tempo_ms	;wreg free
   818                           
   819                           ;ExemploLCD_CGRAM.c: 65: Lcd_Chr(2, kl, 3);
   820  007FA4  C003  F040         	movff	_kl,Lcd_Chr@x
   821  007FA8  6E4B               	movwf	??_main& (0+255),c
   822  007FAA  0E03               	movlw	3
   823  007FAC  6E41               	movwf	Lcd_Chr@Chr,c
   824  007FAE  504B               	movf	??_main& (0+255),w,c
   825  007FB0  0E02               	movlw	2
   826  007FB2  EC97  F03A         	call	_Lcd_Chr
   827                           
   828                           ;ExemploLCD_CGRAM.c: 66: tempo_ms(300);
   829  007FB6  0E01               	movlw	1
   830  007FB8  6E43               	movwf	tempo_ms@i+1,c
   831  007FBA  0E2C               	movlw	44
   832  007FBC  6E42               	movwf	tempo_ms@i,c
   833  007FBE  ECBB  F03A         	call	_tempo_ms	;wreg free
   834                           
   835                           ;ExemploLCD_CGRAM.c: 67: Lcd_Chr(2, kl, 5);
   836  007FC2  C003  F040         	movff	_kl,Lcd_Chr@x
   837  007FC6  6E4B               	movwf	??_main& (0+255),c
   838  007FC8  0E05               	movlw	5
   839  007FCA  6E41               	movwf	Lcd_Chr@Chr,c
   840  007FCC  504B               	movf	??_main& (0+255),w,c
   841  007FCE  0E02               	movlw	2
   842  007FD0  EC97  F03A         	call	_Lcd_Chr
   843                           
   844                           ;ExemploLCD_CGRAM.c: 68: tempo_ms(100);
   845  007FD4  0E00               	movlw	0
   846  007FD6  6E43               	movwf	tempo_ms@i+1,c
   847  007FD8  0E64               	movlw	100
   848  007FDA  6E42               	movwf	tempo_ms@i,c
   849  007FDC  ECBB  F03A         	call	_tempo_ms	;wreg free
   850                           
   851                           ;ExemploLCD_CGRAM.c: 69: inverte_saida(31759);
   852  007FE0  0E7C               	movlw	124
   853  007FE2  6E3D               	movwf	inverte_saida@pino+1,c
   854  007FE4  0E0F               	movlw	15
   855  007FE6  6E3C               	movwf	inverte_saida@pino,c
   856  007FE8  ECAC  F03C         	call	_inverte_saida	;wreg free
   857                           
   858                           ;ExemploLCD_CGRAM.c: 70: inverte_saida(31775);
   859  007FEC  0E7C               	movlw	124
   860  007FEE  6E3D               	movwf	inverte_saida@pino+1,c
   861  007FF0  0E1F               	movlw	31
   862  007FF2  6E3C               	movwf	inverte_saida@pino,c
   863  007FF4  ECAC  F03C         	call	_inverte_saida	;wreg free
   864  007FF8  0603               	decf	_kl,f,c
   865  007FFA  A0D8               	btfss	status,0,c
   866  007FFC  0604               	decf	_kl+1,f,c
   867  007FFE  D7BF               	goto	L2
   868  008000                     __end_of_main:
   869                           	opt stack 0
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           postinc0	equ	0xFEE
   875                           wreg	equ	0xFE8
   876                           postdec1	equ	0xFE5
   877                           fsr1l	equ	0xFE1
   878                           status	equ	0xFD8
   879                           
   880 ;; *************** function _tempo_ms *****************
   881 ;; Defined at:
   882 ;;		line 290 in file "SanUSB48X.h"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  i               2   20[COMRAM] unsigned int 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  k               2   22[COMRAM] unsigned int 
   887 ;; Return value:  Size  Location     Type
   888 ;;		None               void
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   896 ;;      Params:         2       0       0       0       0       0       0       0       0
   897 ;;      Locals:         2       0       0       0       0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0       0       0       0       0
   899 ;;      Totals:         4       0       0       0       0       0       0       0       0
   900 ;;Total ram usage:        4 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    2
   903 ;; This function calls:
   904 ;;		_Delay1KTCYx
   905 ;;		___wmul
   906 ;; This function is called by:
   907 ;;		_main
   908 ;;		_le_AD8bits
   909 ;;		_le_AD10bits
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text1
   914  007576                     __ptext1:
   915                           	opt stack 0
   916  007576                     _tempo_ms:
   917                           	opt stack 28
   918                           
   919                           ;SanUSB48X.h: 292: EEADR =REG+0B11111100+1;
   920                           
   921                           ;incstack = 0
   922  007576  5005               	movf	_REG,w,c
   923  007578  0FFD               	addlw	253
   924  00757A  6EA9               	movwf	4009,c	;volatile
   925                           
   926                           ;SanUSB48X.h: 293: EECON1=REG+EEADR & 0B00001011;
   927  00757C  5005               	movf	_REG,w,c
   928  00757E  24A9               	addwf	4009,w,c	;volatile
   929  007580  0B0B               	andlw	11
   930  007582  6EA6               	movwf	4006,c	;volatile
   931  007584                     l288:
   932  007584  66A8               	tstfsz	4008,c	;volatile
   933  007586  D7FE               	goto	l288
   934                           
   935                           ;SanUSB48X.h: 295: for(k=0;k<12*i;k++) { Delay1KTCYx(1);}
   936  007588  0E00               	movlw	0
   937  00758A  6E45               	movwf	tempo_ms@k+1,c
   938  00758C  0E00               	movlw	0
   939  00758E  6E44               	movwf	tempo_ms@k,c
   940  007590  D005               	goto	l1818
   941  007592                     l1814:
   942  007592  0E01               	movlw	1
   943  007594  EC26  F03A         	call	_Delay1KTCYx
   944  007598  4A44               	infsnz	tempo_ms@k,f,c
   945  00759A  2A45               	incf	tempo_ms@k+1,f,c
   946  00759C                     l1818:
   947  00759C  C042  F03C         	movff	tempo_ms@i,___wmul@multiplier
   948  0075A0  C043  F03D         	movff	tempo_ms@i+1,___wmul@multiplier+1
   949  0075A4  0E00               	movlw	0
   950  0075A6  6E3F               	movwf	___wmul@multiplicand+1,c
   951  0075A8  0E0C               	movlw	12
   952  0075AA  6E3E               	movwf	___wmul@multiplicand,c
   953  0075AC  EC59  F03A         	call	___wmul	;wreg free
   954  0075B0  503C               	movf	?___wmul,w,c
   955  0075B2  5C44               	subwf	tempo_ms@k,w,c
   956  0075B4  503D               	movf	?___wmul+1,w,c
   957  0075B6  5845               	subwfb	tempo_ms@k+1,w,c
   958  0075B8  B0D8               	btfsc	status,0,c
   959  0075BA  0012               	return	
   960  0075BC  D7EA               	goto	l1814
   961  0075BE                     __end_of_tempo_ms:
   962                           	opt stack 0
   963                           tblptru	equ	0xFF8
   964                           tblptrh	equ	0xFF7
   965                           tblptrl	equ	0xFF6
   966                           tablat	equ	0xFF5
   967                           postinc0	equ	0xFEE
   968                           wreg	equ	0xFE8
   969                           postdec1	equ	0xFE5
   970                           fsr1l	equ	0xFE1
   971                           status	equ	0xFD8
   972                           
   973 ;; *************** function ___wmul *****************
   974 ;; Defined at:
   975 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\wmul.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  multiplier      2   14[COMRAM] unsigned int 
   978 ;;  multiplicand    2   16[COMRAM] unsigned int 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  product         2   18[COMRAM] unsigned int 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  2   14[COMRAM] unsigned int 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0, prodl, prodh
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   990 ;;      Params:         4       0       0       0       0       0       0       0       0
   991 ;;      Locals:         2       0       0       0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0
   993 ;;      Totals:         6       0       0       0       0       0       0       0       0
   994 ;;Total ram usage:        6 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    1
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_tempo_ms
  1001 ;;		_tempo_us
  1002 ;;		_timer0_ms
  1003 ;;		_SetaPWM1
  1004 ;;		_SetaPWM2
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text2
  1009  0074B2                     __ptext2:
  1010                           	opt stack 0
  1011  0074B2                     ___wmul:
  1012                           	opt stack 28
  1013                           
  1014                           ;incstack = 0
  1015  0074B2  503C               	movf	___wmul@multiplier,w,c
  1016  0074B4  023E               	mulwf	___wmul@multiplicand,c
  1017  0074B6  CFF3 F040          	movff	prodl,___wmul@product
  1018  0074BA  CFF4 F041          	movff	prodh,___wmul@product+1
  1019  0074BE  503C               	movf	___wmul@multiplier,w,c
  1020  0074C0  023F               	mulwf	___wmul@multiplicand+1,c
  1021  0074C2  CFF3 FFF4          	movff	prodl,prodh
  1022  0074C6  6AF3               	clrf	prodl,c
  1023  0074C8  50F3               	movf	prodl,w,c
  1024  0074CA  2640               	addwf	___wmul@product,f,c
  1025  0074CC  50F4               	movf	prodh,w,c
  1026  0074CE  2241               	addwfc	___wmul@product+1,f,c
  1027  0074D0  503D               	movf	___wmul@multiplier+1,w,c
  1028  0074D2  023E               	mulwf	___wmul@multiplicand,c
  1029  0074D4  CFF3 FFF4          	movff	prodl,prodh
  1030  0074D8  6AF3               	clrf	prodl,c
  1031  0074DA  50F3               	movf	prodl,w,c
  1032  0074DC  2640               	addwf	___wmul@product,f,c
  1033  0074DE  50F4               	movf	prodh,w,c
  1034  0074E0  2241               	addwfc	___wmul@product+1,f,c
  1035  0074E2  C040  F03C         	movff	___wmul@product,?___wmul
  1036  0074E6  C041  F03D         	movff	___wmul@product+1,?___wmul+1
  1037  0074EA  0012               	return	
  1038  0074EC                     __end_of___wmul:
  1039                           	opt stack 0
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           prodh	equ	0xFF4
  1045                           prodl	equ	0xFF3
  1046                           postinc0	equ	0xFEE
  1047                           wreg	equ	0xFE8
  1048                           postdec1	equ	0xFE5
  1049                           fsr1l	equ	0xFE1
  1050                           status	equ	0xFD8
  1051                           
  1052 ;; *************** function _lcd_ini *****************
  1053 ;; Defined at:
  1054 ;;		line 111 in file "lcd.h"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  data            1   24[COMRAM] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;		None               void
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0, prodl, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1068 ;;      Params:         0       0       0       0       0       0       0       0       0
  1069 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1070 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1071 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1072 ;;Total ram usage:        2 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    4
  1075 ;; This function calls:
  1076 ;;		_Delay_5500us
  1077 ;;		_Delay_5us
  1078 ;;		_Lcd_Cmd
  1079 ;;		___awdiv
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text3
  1086  007A5E                     __ptext3:
  1087                           	opt stack 0
  1088  007A5E                     _lcd_ini:
  1089                           	opt stack 26
  1090                           
  1091                           ;lcd.h: 112: unsigned char data;
  1092                           ;lcd.h: 113: TRISBbits.TRISB3 = 0; TRISBbits.TRISB2 = 0; TRISBbits.TRISB1 = 0; TRISBbits
      +                          .TRISB0 = 0; TRISBbits.TRISB4 = 0; TRISBbits.TRISB5 = 0;
  1093                           
  1094                           ;incstack = 0
  1095  007A5E  9693               	bcf	3987,3,c	;volatile
  1096  007A60  9493               	bcf	3987,2,c	;volatile
  1097  007A62  9293               	bcf	3987,1,c	;volatile
  1098  007A64  9093               	bcf	3987,0,c	;volatile
  1099  007A66  9893               	bcf	3987,4,c	;volatile
  1100  007A68  9A93               	bcf	3987,5,c	;volatile
  1101                           
  1102                           ;lcd.h: 114: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 0; LATBbits.LATB0 
      +                          = 0; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  1103  007A6A  968A               	bcf	3978,3,c	;volatile
  1104  007A6C  948A               	bcf	3978,2,c	;volatile
  1105  007A6E  928A               	bcf	3978,1,c	;volatile
  1106  007A70  908A               	bcf	3978,0,c	;volatile
  1107  007A72  988A               	bcf	3978,4,c	;volatile
  1108  007A74  9A8A               	bcf	3978,5,c	;volatile
  1109                           
  1110                           ;lcd.h: 115: EEADR =0B11111101; EECON1bits.WREN = 0;
  1111  007A76  0EFD               	movlw	253
  1112  007A78  6EA9               	movwf	4009,c	;volatile
  1113  007A7A  94A6               	bcf	4006,2,c	;volatile
  1114                           
  1115                           ;lcd.h: 116: EECON1bits.EEPGD = 0; EECON1bits.CFGS = 0;
  1116  007A7C  9EA6               	bcf	4006,7,c	;volatile
  1117  007A7E  9CA6               	bcf	4006,6,c	;volatile
  1118                           
  1119                           ;lcd.h: 117: EECON1bits.RD = 1; while(EEDATA); s+=EEDATA;
  1120  007A80  80A6               	bsf	4006,0,c	;volatile
  1121  007A82                     l456:
  1122  007A82  66A8               	tstfsz	4008,c	;volatile
  1123  007A84  D7FE               	goto	l456
  1124  007A86  50A8               	movf	4008,w,c	;volatile
  1125  007A88  2650               	addwf	_s,f,c
  1126                           
  1127                           ;lcd.h: 118: EEADR-=EEADR; EECON1bits.WREN = 0;
  1128  007A8A  50A9               	movf	4009,w,c	;volatile
  1129  007A8C  5EA9               	subwf	4009,f,c	;volatile
  1130  007A8E  94A6               	bcf	4006,2,c	;volatile
  1131                           
  1132                           ;lcd.h: 119: EECON1bits.EEPGD = 0; EECON1bits.CFGS = 0;
  1133  007A90  9EA6               	bcf	4006,7,c	;volatile
  1134  007A92  9CA6               	bcf	4006,6,c	;volatile
  1135                           
  1136                           ;lcd.h: 120: EECON1bits.RD = 1;s=(s+EEDATA)/2;
  1137  007A94  80A6               	bsf	4006,0,c	;volatile
  1138  007A96  5050               	movf	_s,w,c
  1139  007A98  24A8               	addwf	4008,w,c	;volatile
  1140  007A9A  6E3C               	movwf	___awdiv@dividend,c
  1141  007A9C  6A3D               	clrf	___awdiv@dividend+1,c
  1142  007A9E  363D               	rlcf	___awdiv@dividend+1,f,c
  1143  007AA0  0E00               	movlw	0
  1144  007AA2  6E3F               	movwf	___awdiv@divisor+1,c
  1145  007AA4  0E02               	movlw	2
  1146  007AA6  6E3E               	movwf	___awdiv@divisor,c
  1147  007AA8  EC54  F03C         	call	___awdiv	;wreg free
  1148  007AAC  503C               	movf	?___awdiv,w,c
  1149  007AAE  6E50               	movwf	_s,c
  1150                           
  1151                           ;lcd.h: 121: Delay_5500us(); Delay_5500us(); Delay_5500us();
  1152  007AB0  EC22  F03A         	call	_Delay_5500us	;wreg free
  1153  007AB4  EC22  F03A         	call	_Delay_5500us	;wreg free
  1154  007AB8  EC22  F03A         	call	_Delay_5500us	;wreg free
  1155                           
  1156                           ;lcd.h: 122: Delay_5500us(); Delay_5500us(); Delay_5500us();
  1157  007ABC  EC22  F03A         	call	_Delay_5500us	;wreg free
  1158  007AC0  EC22  F03A         	call	_Delay_5500us	;wreg free
  1159  007AC4  EC22  F03A         	call	_Delay_5500us	;wreg free
  1160                           
  1161                           ;lcd.h: 123: for(data = 1; data < 4; data ++)
  1162  007AC8  6E45               	movwf	??_lcd_ini& (0+255),c
  1163  007ACA  0E01               	movlw	1
  1164  007ACC  6E46               	movwf	lcd_ini@data,c
  1165  007ACE  5045               	movf	??_lcd_ini& (0+255),w,c
  1166  007AD0  D017               	goto	L3
  1167  007AD2                     l459:
  1168                           
  1169                           ;lcd.h: 124: {
  1170                           ;lcd.h: 125: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 1; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  1171  007AD2  968A               	bcf	3978,3,c	;volatile
  1172  007AD4  948A               	bcf	3978,2,c	;volatile
  1173  007AD6  828A               	bsf	3978,1,c	;volatile
  1174  007AD8  808A               	bsf	3978,0,c	;volatile
  1175  007ADA  988A               	bcf	3978,4,c	;volatile
  1176  007ADC  9A8A               	bcf	3978,5,c	;volatile
  1177                           
  1178                           ;lcd.h: 126: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 1; LATBbits.LATB4 = 1; LATBbits.LATB5 = 0;
  1179  007ADE  968A               	bcf	3978,3,c	;volatile
  1180  007AE0  948A               	bcf	3978,2,c	;volatile
  1181  007AE2  828A               	bsf	3978,1,c	;volatile
  1182  007AE4  808A               	bsf	3978,0,c	;volatile
  1183  007AE6  888A               	bsf	3978,4,c	;volatile
  1184  007AE8  9A8A               	bcf	3978,5,c	;volatile
  1185                           
  1186                           ;lcd.h: 127: Delay_5us();
  1187  007AEA  EC34  F03B         	call	_Delay_5us	;wreg free
  1188                           
  1189                           ;lcd.h: 128: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 1; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  1190  007AEE  968A               	bcf	3978,3,c	;volatile
  1191  007AF0  948A               	bcf	3978,2,c	;volatile
  1192  007AF2  828A               	bsf	3978,1,c	;volatile
  1193  007AF4  808A               	bsf	3978,0,c	;volatile
  1194  007AF6  988A               	bcf	3978,4,c	;volatile
  1195  007AF8  9A8A               	bcf	3978,5,c	;volatile
  1196                           
  1197                           ;lcd.h: 129: Delay_5500us();
  1198  007AFA  EC22  F03A         	call	_Delay_5500us	;wreg free
  1199  007AFE  2A46               	incf	lcd_ini@data,f,c
  1200  007B00                     L3:
  1201  007B00  0E03               	movlw	3
  1202  007B02  6446               	cpfsgt	lcd_ini@data,c
  1203  007B04  D7E6               	goto	l459
  1204                           
  1205                           ;lcd.h: 130: }
  1206                           ;lcd.h: 131: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 0; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  1207  007B06  968A               	bcf	3978,3,c	;volatile
  1208  007B08  948A               	bcf	3978,2,c	;volatile
  1209  007B0A  828A               	bsf	3978,1,c	;volatile
  1210  007B0C  908A               	bcf	3978,0,c	;volatile
  1211  007B0E  988A               	bcf	3978,4,c	;volatile
  1212  007B10  9A8A               	bcf	3978,5,c	;volatile
  1213                           
  1214                           ;lcd.h: 132: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 0; LATBbits.LATB4 = 1; LATBbits.LATB5 = 0;
  1215  007B12  968A               	bcf	3978,3,c	;volatile
  1216  007B14  948A               	bcf	3978,2,c	;volatile
  1217  007B16  828A               	bsf	3978,1,c	;volatile
  1218  007B18  908A               	bcf	3978,0,c	;volatile
  1219  007B1A  888A               	bsf	3978,4,c	;volatile
  1220  007B1C  9A8A               	bcf	3978,5,c	;volatile
  1221                           
  1222                           ;lcd.h: 133: Delay_5us();
  1223  007B1E  EC34  F03B         	call	_Delay_5us	;wreg free
  1224                           
  1225                           ;lcd.h: 134: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 0; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  1226  007B22  968A               	bcf	3978,3,c	;volatile
  1227  007B24  948A               	bcf	3978,2,c	;volatile
  1228  007B26  828A               	bsf	3978,1,c	;volatile
  1229  007B28  908A               	bcf	3978,0,c	;volatile
  1230  007B2A  988A               	bcf	3978,4,c	;volatile
  1231  007B2C  9A8A               	bcf	3978,5,c	;volatile
  1232                           
  1233                           ;lcd.h: 135: Delay_5500us();
  1234  007B2E  EC22  F03A         	call	_Delay_5500us	;wreg free
  1235                           
  1236                           ;lcd.h: 136: data = 40; Lcd_Cmd(data);
  1237  007B32  6E45               	movwf	??_lcd_ini& (0+255),c
  1238  007B34  0E28               	movlw	40
  1239  007B36  6E46               	movwf	lcd_ini@data,c
  1240  007B38  5045               	movf	??_lcd_ini& (0+255),w,c
  1241  007B3A  5046               	movf	lcd_ini@data,w,c
  1242  007B3C  ECB6  F03D         	call	_Lcd_Cmd
  1243                           
  1244                           ;lcd.h: 137: data = 16; Lcd_Cmd(data);
  1245  007B40  6E45               	movwf	??_lcd_ini& (0+255),c
  1246  007B42  0E10               	movlw	16
  1247  007B44  6E46               	movwf	lcd_ini@data,c
  1248  007B46  5045               	movf	??_lcd_ini& (0+255),w,c
  1249  007B48  5046               	movf	lcd_ini@data,w,c
  1250  007B4A  ECB6  F03D         	call	_Lcd_Cmd
  1251                           
  1252                           ;lcd.h: 138: data = 1; Lcd_Cmd(data);
  1253  007B4E  6E45               	movwf	??_lcd_ini& (0+255),c
  1254  007B50  0E01               	movlw	1
  1255  007B52  6E46               	movwf	lcd_ini@data,c
  1256  007B54  5045               	movf	??_lcd_ini& (0+255),w,c
  1257  007B56  5046               	movf	lcd_ini@data,w,c
  1258  007B58  ECB6  F03D         	call	_Lcd_Cmd
  1259                           
  1260                           ;lcd.h: 139: data = 15; Lcd_Cmd(data);
  1261  007B5C  6E45               	movwf	??_lcd_ini& (0+255),c
  1262  007B5E  0E0F               	movlw	15
  1263  007B60  6E46               	movwf	lcd_ini@data,c
  1264  007B62  5045               	movf	??_lcd_ini& (0+255),w,c
  1265  007B64  5046               	movf	lcd_ini@data,w,c
  1266  007B66  ECB6  F03D         	call	_Lcd_Cmd
  1267  007B6A  0012               	return	
  1268  007B6C                     __end_of_lcd_ini:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           prodh	equ	0xFF4
  1275                           prodl	equ	0xFF3
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           postdec1	equ	0xFE5
  1279                           fsr1l	equ	0xFE1
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function ___awdiv *****************
  1283 ;; Defined at:
  1284 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awdiv.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  dividend        2   14[COMRAM] int 
  1287 ;;  divisor         2   16[COMRAM] int 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  quotient        2   21[COMRAM] int 
  1290 ;;  sign            1   20[COMRAM] unsigned char 
  1291 ;;  counter         1   19[COMRAM] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  2   14[COMRAM] int 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, prodl
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1301 ;;      Params:         4       0       0       0       0       0       0       0       0
  1302 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1303 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1304 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1305 ;;Total ram usage:        9 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    1
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_lcd_ini
  1312 ;;		_SetaPWM1
  1313 ;;		_SetaPWM2
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text4
  1318  0078A8                     __ptext4:
  1319                           	opt stack 0
  1320  0078A8                     ___awdiv:
  1321                           	opt stack 28
  1322                           
  1323                           ;incstack = 0
  1324  0078A8  6E40               	movwf	??___awdiv& (0+255),c
  1325  0078AA  0E00               	movlw	0
  1326  0078AC  6E42               	movwf	___awdiv@sign,c
  1327  0078AE  5040               	movf	??___awdiv& (0+255),w,c
  1328  0078B0  503F               	movf	___awdiv@divisor+1,w,c
  1329  0078B2  0A80               	xorlw	128
  1330  0078B4  6EF3               	movwf	prodl,c
  1331  0078B6  0E80               	movlw	128
  1332  0078B8  5CF3               	subwf	prodl,w,c
  1333  0078BA  0E00               	movlw	0
  1334  0078BC  B4D8               	btfsc	status,2,c
  1335  0078BE  5C3E               	subwf	___awdiv@divisor,w,c
  1336  0078C0  B0D8               	btfsc	status,0,c
  1337  0078C2  D008               	goto	l1700
  1338  0078C4  6C3E               	negf	___awdiv@divisor,c
  1339  0078C6  1E3F               	comf	___awdiv@divisor+1,f,c
  1340  0078C8  B0D8               	btfsc	status,0,c
  1341  0078CA  2A3F               	incf	___awdiv@divisor+1,f,c
  1342  0078CC  6E40               	movwf	??___awdiv& (0+255),c
  1343  0078CE  0E01               	movlw	1
  1344  0078D0  6E42               	movwf	___awdiv@sign,c
  1345  0078D2  5040               	movf	??___awdiv& (0+255),w,c
  1346  0078D4                     l1700:
  1347  0078D4  503D               	movf	___awdiv@dividend+1,w,c
  1348  0078D6  0A80               	xorlw	128
  1349  0078D8  6EF3               	movwf	prodl,c
  1350  0078DA  0E80               	movlw	128
  1351  0078DC  5CF3               	subwf	prodl,w,c
  1352  0078DE  0E00               	movlw	0
  1353  0078E0  B4D8               	btfsc	status,2,c
  1354  0078E2  5C3C               	subwf	___awdiv@dividend,w,c
  1355  0078E4  B0D8               	btfsc	status,0,c
  1356  0078E6  D006               	goto	l1706
  1357  0078E8  6C3C               	negf	___awdiv@dividend,c
  1358  0078EA  1E3D               	comf	___awdiv@dividend+1,f,c
  1359  0078EC  B0D8               	btfsc	status,0,c
  1360  0078EE  2A3D               	incf	___awdiv@dividend+1,f,c
  1361  0078F0  0E01               	movlw	1
  1362  0078F2  1A42               	xorwf	___awdiv@sign,f,c
  1363  0078F4                     l1706:
  1364  0078F4  0E00               	movlw	0
  1365  0078F6  6E44               	movwf	___awdiv@quotient+1,c
  1366  0078F8  0E00               	movlw	0
  1367  0078FA  6E43               	movwf	___awdiv@quotient,c
  1368  0078FC  503F               	movf	___awdiv@divisor+1,w,c
  1369  0078FE  103E               	iorwf	___awdiv@divisor,w,c
  1370  007900  B4D8               	btfsc	status,2,c
  1371  007902  D01E               	goto	l1728
  1372  007904  6E40               	movwf	??___awdiv& (0+255),c
  1373  007906  0E01               	movlw	1
  1374  007908  6E41               	movwf	___awdiv@counter,c
  1375  00790A  5040               	movf	??___awdiv& (0+255),w,c
  1376  00790C  D004               	goto	l1714
  1377  00790E                     l1712:
  1378  00790E  90D8               	bcf	status,0,c
  1379  007910  363E               	rlcf	___awdiv@divisor,f,c
  1380  007912  363F               	rlcf	___awdiv@divisor+1,f,c
  1381  007914  2A41               	incf	___awdiv@counter,f,c
  1382  007916                     l1714:
  1383  007916  AE3F               	btfss	___awdiv@divisor+1,7,c
  1384  007918  D7FA               	goto	l1712
  1385  00791A                     l1716:
  1386  00791A  90D8               	bcf	status,0,c
  1387  00791C  3643               	rlcf	___awdiv@quotient,f,c
  1388  00791E  3644               	rlcf	___awdiv@quotient+1,f,c
  1389  007920  503E               	movf	___awdiv@divisor,w,c
  1390  007922  5C3C               	subwf	___awdiv@dividend,w,c
  1391  007924  503F               	movf	___awdiv@divisor+1,w,c
  1392  007926  583D               	subwfb	___awdiv@dividend+1,w,c
  1393  007928  A0D8               	btfss	status,0,c
  1394  00792A  D005               	goto	l1724
  1395  00792C  503E               	movf	___awdiv@divisor,w,c
  1396  00792E  5E3C               	subwf	___awdiv@dividend,f,c
  1397  007930  503F               	movf	___awdiv@divisor+1,w,c
  1398  007932  5A3D               	subwfb	___awdiv@dividend+1,f,c
  1399  007934  8043               	bsf	___awdiv@quotient,0,c
  1400  007936                     l1724:
  1401  007936  90D8               	bcf	status,0,c
  1402  007938  323F               	rrcf	___awdiv@divisor+1,f,c
  1403  00793A  323E               	rrcf	___awdiv@divisor,f,c
  1404  00793C  2E41               	decfsz	___awdiv@counter,f,c
  1405  00793E  D7ED               	goto	l1716
  1406  007940                     l1728:
  1407  007940  5042               	movf	___awdiv@sign,w,c
  1408  007942  B4D8               	btfsc	status,2,c
  1409  007944  D004               	goto	l1732
  1410  007946  6C43               	negf	___awdiv@quotient,c
  1411  007948  1E44               	comf	___awdiv@quotient+1,f,c
  1412  00794A  B0D8               	btfsc	status,0,c
  1413  00794C  2A44               	incf	___awdiv@quotient+1,f,c
  1414  00794E                     l1732:
  1415  00794E  C043  F03C         	movff	___awdiv@quotient,?___awdiv
  1416  007952  C044  F03D         	movff	___awdiv@quotient+1,?___awdiv+1
  1417  007956  0012               	return	
  1418  007958                     __end_of___awdiv:
  1419                           	opt stack 0
  1420                           tblptru	equ	0xFF8
  1421                           tblptrh	equ	0xFF7
  1422                           tblptrl	equ	0xFF6
  1423                           tablat	equ	0xFF5
  1424                           prodh	equ	0xFF4
  1425                           prodl	equ	0xFF3
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           postdec1	equ	0xFE5
  1429                           fsr1l	equ	0xFE1
  1430                           status	equ	0xFD8
  1431                           
  1432 ;; *************** function _lcd_escreve *****************
  1433 ;; Defined at:
  1434 ;;		line 142 in file "lcd.h"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  y               1    wreg     unsigned char 
  1437 ;;  x               1   18[COMRAM] unsigned char 
  1438 ;;  buffer          2   19[COMRAM] PTR const unsigned char 
  1439 ;;		 -> STR_2(14), STR_1(15), 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  y               1   21[COMRAM] unsigned char 
  1442 ;;  data            1   22[COMRAM] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;		None               void
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1452 ;;      Params:         3       0       0       0       0       0       0       0       0
  1453 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1455 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1456 ;;Total ram usage:        5 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    4
  1459 ;; This function calls:
  1460 ;;		_Lcd_Chr_CP
  1461 ;;		_Lcd_Cmd
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text5
  1468  007736                     __ptext5:
  1469                           	opt stack 0
  1470  007736                     _lcd_escreve:
  1471                           	opt stack 26
  1472                           
  1473                           ;incstack = 0
  1474                           ;lcd_escreve@y stored from wreg
  1475  007736  CFE8 F043          	movff	wreg,lcd_escreve@y
  1476                           
  1477                           ;lcd.h: 143: unsigned char data;
  1478                           ;lcd.h: 144: switch(y){
  1479  00773A  D00D               	goto	l1944
  1480  00773C                     l1934:
  1481  00773C  5040               	movf	lcd_escreve@x,w,c
  1482  00773E  0F7F               	addlw	127
  1483  007740  D008               	goto	L6
  1484  007742                     l1936:
  1485  007742  5040               	movf	lcd_escreve@x,w,c
  1486  007744  0FBF               	addlw	191
  1487  007746  D005               	goto	L6
  1488  007748                     l1938:
  1489  007748  5040               	movf	lcd_escreve@x,w,c
  1490  00774A  0F93               	addlw	147
  1491  00774C  D002               	goto	L6
  1492  00774E                     l1940:
  1493  00774E  5040               	movf	lcd_escreve@x,w,c
  1494  007750  0FD3               	addlw	211
  1495  007752                     L6:
  1496  007752  6E44               	movwf	lcd_escreve@data,c
  1497  007754  D00D               	goto	l1946
  1498  007756                     l1944:
  1499  007756  5043               	movf	lcd_escreve@y,w,c
  1500                           
  1501                           ; Switch size 1, requested type "space"
  1502                           ; Number of cases is 4, Range of values is 1 to 4
  1503                           ; switch strategies available:
  1504                           ; Name         Instructions Cycles
  1505                           ; simple_byte           13     7 (average)
  1506                           ;	Chosen strategy is simple_byte
  1507  007758  0A01               	xorlw	1	; case 1
  1508  00775A  B4D8               	btfsc	status,2,c
  1509  00775C  D7EF               	goto	l1934
  1510  00775E  0A03               	xorlw	3	; case 2
  1511  007760  B4D8               	btfsc	status,2,c
  1512  007762  D7EF               	goto	l1936
  1513  007764  0A01               	xorlw	1	; case 3
  1514  007766  B4D8               	btfsc	status,2,c
  1515  007768  D7EF               	goto	l1938
  1516  00776A  0A07               	xorlw	7	; case 4
  1517  00776C  B4D8               	btfsc	status,2,c
  1518  00776E  D7EF               	goto	l1940
  1519  007770                     l1946:
  1520                           
  1521                           ;lcd.h: 150: Lcd_Cmd(data);
  1522  007770  5044               	movf	lcd_escreve@data,w,c
  1523  007772  ECB6  F03D         	call	_Lcd_Cmd
  1524                           
  1525                           ;lcd.h: 151: while(*buffer)
  1526  007776  D00A               	goto	l1952
  1527  007778                     l1948:
  1528                           
  1529                           ;lcd.h: 152: {
  1530                           ;lcd.h: 153: Lcd_Chr_CP(*buffer);
  1531  007778  C041  FFF6         	movff	lcd_escreve@buffer,tblptrl
  1532  00777C  C042  FFF7         	movff	lcd_escreve@buffer+1,tblptrh
  1533  007780  0008               	tblrd		*
  1534  007782  50F5               	movf	tablat,w,c
  1535  007784  EC4A  F03E         	call	_Lcd_Chr_CP
  1536                           
  1537                           ;lcd.h: 154: buffer++;
  1538  007788  4A41               	infsnz	lcd_escreve@buffer,f,c
  1539  00778A  2A42               	incf	lcd_escreve@buffer+1,f,c
  1540  00778C                     l1952:
  1541  00778C  C041  FFF6         	movff	lcd_escreve@buffer,tblptrl
  1542  007790  C042  FFF7         	movff	lcd_escreve@buffer+1,tblptrh
  1543  007794  0008               	tblrd		*
  1544  007796  50F5               	movf	tablat,w,c
  1545  007798  0900               	iorlw	0
  1546  00779A  B4D8               	btfsc	status,2,c
  1547                           
  1548                           ;lcd.h: 155: }
  1549                           ;lcd.h: 156: return;
  1550  00779C  0012               	return	
  1551  00779E  D7EC               	goto	l1948
  1552  0077A0                     __end_of_lcd_escreve:
  1553                           	opt stack 0
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           prodh	equ	0xFF4
  1559                           prodl	equ	0xFF3
  1560                           postinc0	equ	0xFEE
  1561                           wreg	equ	0xFE8
  1562                           postdec1	equ	0xFE5
  1563                           fsr1l	equ	0xFE1
  1564                           status	equ	0xFD8
  1565                           
  1566 ;; *************** function _inverte_saida *****************
  1567 ;; Defined at:
  1568 ;;		line 228 in file "SanUSB48X.h"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  pino            2   14[COMRAM] unsigned int 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;		None               void
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1582 ;;      Params:         2       0       0       0       0       0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1584 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1585 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1586 ;;Total ram usage:        4 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text6
  1597  007958                     __ptext6:
  1598                           	opt stack 0
  1599  007958                     _inverte_saida:
  1600                           	opt stack 29
  1601                           
  1602                           ;SanUSB48X.h: 230: switch(pino){
  1603                           
  1604                           ;incstack = 0
  1605  007958  D03C               	goto	l1804
  1606  00795A                     l234:
  1607  00795A  9092               	bcf	3986,0,c	;volatile
  1608  00795C  7080               	btg	3968,0,c	;volatile
  1609  00795E  D07E               	goto	l255
  1610  007960                     l236:
  1611  007960  9292               	bcf	3986,1,c	;volatile
  1612  007962  7280               	btg	3968,1,c	;volatile
  1613  007964  D07B               	goto	l255
  1614  007966                     l237:
  1615  007966  9492               	bcf	3986,2,c	;volatile
  1616  007968  7480               	btg	3968,2,c	;volatile
  1617  00796A  D078               	goto	l255
  1618  00796C                     l238:
  1619  00796C  9692               	bcf	3986,3,c	;volatile
  1620  00796E  7680               	btg	3968,3,c	;volatile
  1621  007970  D075               	goto	l255
  1622  007972                     l239:
  1623  007972  9892               	bcf	3986,4,c	;volatile
  1624  007974  7880               	btg	3968,4,c	;volatile
  1625  007976  D072               	goto	l255
  1626  007978                     l240:
  1627  007978  9A92               	bcf	3986,5,c	;volatile
  1628  00797A  7A80               	btg	3968,5,c	;volatile
  1629  00797C  D06F               	goto	l255
  1630  00797E                     l241:
  1631  00797E  9093               	bcf	3987,0,c	;volatile
  1632  007980  7081               	btg	3969,0,c	;volatile
  1633  007982  D06C               	goto	l255
  1634  007984                     l242:
  1635  007984  9293               	bcf	3987,1,c	;volatile
  1636  007986  7281               	btg	3969,1,c	;volatile
  1637  007988  D069               	goto	l255
  1638  00798A                     l243:
  1639  00798A  9493               	bcf	3987,2,c	;volatile
  1640  00798C  7481               	btg	3969,2,c	;volatile
  1641  00798E  D066               	goto	l255
  1642  007990                     l244:
  1643  007990  9693               	bcf	3987,3,c	;volatile
  1644  007992  7681               	btg	3969,3,c	;volatile
  1645  007994  D063               	goto	l255
  1646  007996                     l245:
  1647  007996  9893               	bcf	3987,4,c	;volatile
  1648  007998  7881               	btg	3969,4,c	;volatile
  1649  00799A  D060               	goto	l255
  1650  00799C                     l246:
  1651  00799C  9A93               	bcf	3987,5,c	;volatile
  1652  00799E  7A81               	btg	3969,5,c	;volatile
  1653  0079A0  D05D               	goto	l255
  1654  0079A2                     l247:
  1655  0079A2  9C93               	bcf	3987,6,c	;volatile
  1656  0079A4  7C81               	btg	3969,6,c	;volatile
  1657  0079A6  D05A               	goto	l255
  1658  0079A8                     l248:
  1659  0079A8  9E93               	bcf	3987,7,c	;volatile
  1660  0079AA  7E81               	btg	3969,7,c	;volatile
  1661  0079AC  D057               	goto	l255
  1662  0079AE                     l249:
  1663  0079AE  9094               	bcf	3988,0,c	;volatile
  1664  0079B0  7082               	btg	3970,0,c	;volatile
  1665  0079B2  D054               	goto	l255
  1666  0079B4                     l250:
  1667  0079B4  9294               	bcf	3988,1,c	;volatile
  1668  0079B6  7282               	btg	3970,1,c	;volatile
  1669  0079B8  D051               	goto	l255
  1670  0079BA                     l251:
  1671  0079BA  9494               	bcf	3988,2,c	;volatile
  1672  0079BC  7482               	btg	3970,2,c	;volatile
  1673  0079BE  D04E               	goto	l255
  1674  0079C0                     l252:
  1675  0079C0  9C94               	bcf	3988,6,c	;volatile
  1676  0079C2  7C82               	btg	3970,6,c	;volatile
  1677  0079C4  D04B               	goto	l255
  1678  0079C6                     l253:
  1679  0079C6  9E94               	bcf	3988,7,c	;volatile
  1680  0079C8  7E82               	btg	3970,7,c	;volatile
  1681  0079CA  D048               	goto	l255
  1682  0079CC                     l254:
  1683  0079CC  9E95               	bcf	3989,7,c	;volatile
  1684  0079CE  7E83               	btg	3971,7,c	;volatile
  1685  0079D0  D045               	goto	l255
  1686  0079D2                     l1804:
  1687  0079D2  C03C  F03E         	movff	inverte_saida@pino,??_inverte_saida
  1688  0079D6  C03D  F03F         	movff	inverte_saida@pino+1,??_inverte_saida+1
  1689                           
  1690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1691                           ; Switch size 1, requested type "space"
  1692                           ; Number of cases is 1, Range of values is 124 to 124
  1693                           ; switch strategies available:
  1694                           ; Name         Instructions Cycles
  1695                           ; simple_byte            4     3 (average)
  1696                           ;	Chosen strategy is simple_byte
  1697  0079DA  503F               	movf	??_inverte_saida+1,w,c
  1698  0079DC  0A7C               	xorlw	124	; case 124
  1699  0079DE  A4D8               	btfss	status,2,c
  1700  0079E0  D03D               	goto	l255
  1701                           
  1702                           ; Switch size 1, requested type "space"
  1703                           ; Number of cases is 20, Range of values is 0 to 31
  1704                           ; switch strategies available:
  1705                           ; Name         Instructions Cycles
  1706                           ; simple_byte           61    31 (average)
  1707                           ;	Chosen strategy is simple_byte
  1708  0079E2  503E               	movf	??_inverte_saida,w,c
  1709  0079E4  0A00               	xorlw	0	; case 0
  1710  0079E6  B4D8               	btfsc	status,2,c
  1711  0079E8  D7B8               	goto	l234
  1712  0079EA  0A01               	xorlw	1	; case 1
  1713  0079EC  B4D8               	btfsc	status,2,c
  1714  0079EE  D7B8               	goto	l236
  1715  0079F0  0A03               	xorlw	3	; case 2
  1716  0079F2  B4D8               	btfsc	status,2,c
  1717  0079F4  D7B8               	goto	l237
  1718  0079F6  0A01               	xorlw	1	; case 3
  1719  0079F8  B4D8               	btfsc	status,2,c
  1720  0079FA  D7B8               	goto	l238
  1721  0079FC  0A07               	xorlw	7	; case 4
  1722  0079FE  B4D8               	btfsc	status,2,c
  1723  007A00  D7B8               	goto	l239
  1724  007A02  0A01               	xorlw	1	; case 5
  1725  007A04  B4D8               	btfsc	status,2,c
  1726  007A06  D7B8               	goto	l240
  1727  007A08  0A0D               	xorlw	13	; case 8
  1728  007A0A  B4D8               	btfsc	status,2,c
  1729  007A0C  D7B8               	goto	l241
  1730  007A0E  0A01               	xorlw	1	; case 9
  1731  007A10  B4D8               	btfsc	status,2,c
  1732  007A12  D7B8               	goto	l242
  1733  007A14  0A03               	xorlw	3	; case 10
  1734  007A16  B4D8               	btfsc	status,2,c
  1735  007A18  D7B8               	goto	l243
  1736  007A1A  0A01               	xorlw	1	; case 11
  1737  007A1C  B4D8               	btfsc	status,2,c
  1738  007A1E  D7B8               	goto	l244
  1739  007A20  0A07               	xorlw	7	; case 12
  1740  007A22  B4D8               	btfsc	status,2,c
  1741  007A24  D7B8               	goto	l245
  1742  007A26  0A01               	xorlw	1	; case 13
  1743  007A28  B4D8               	btfsc	status,2,c
  1744  007A2A  D7B8               	goto	l246
  1745  007A2C  0A03               	xorlw	3	; case 14
  1746  007A2E  B4D8               	btfsc	status,2,c
  1747  007A30  D7B8               	goto	l247
  1748  007A32  0A01               	xorlw	1	; case 15
  1749  007A34  B4D8               	btfsc	status,2,c
  1750  007A36  D7B8               	goto	l248
  1751  007A38  0A1F               	xorlw	31	; case 16
  1752  007A3A  B4D8               	btfsc	status,2,c
  1753  007A3C  D7B8               	goto	l249
  1754  007A3E  0A01               	xorlw	1	; case 17
  1755  007A40  B4D8               	btfsc	status,2,c
  1756  007A42  D7B8               	goto	l250
  1757  007A44  0A03               	xorlw	3	; case 18
  1758  007A46  B4D8               	btfsc	status,2,c
  1759  007A48  D7B8               	goto	l251
  1760  007A4A  0A04               	xorlw	4	; case 22
  1761  007A4C  B4D8               	btfsc	status,2,c
  1762  007A4E  D7B8               	goto	l252
  1763  007A50  0A01               	xorlw	1	; case 23
  1764  007A52  B4D8               	btfsc	status,2,c
  1765  007A54  D7B8               	goto	l253
  1766  007A56  0A08               	xorlw	8	; case 31
  1767  007A58  B4D8               	btfsc	status,2,c
  1768  007A5A  D7B8               	goto	l254
  1769  007A5C                     l255:
  1770  007A5C  0012               	return	
  1771  007A5E                     __end_of_inverte_saida:
  1772                           	opt stack 0
  1773                           tblptru	equ	0xFF8
  1774                           tblptrh	equ	0xFF7
  1775                           tblptrl	equ	0xFF6
  1776                           tablat	equ	0xFF5
  1777                           prodh	equ	0xFF4
  1778                           prodl	equ	0xFF3
  1779                           postinc0	equ	0xFEE
  1780                           wreg	equ	0xFE8
  1781                           postdec1	equ	0xFE5
  1782                           fsr1l	equ	0xFE1
  1783                           status	equ	0xFD8
  1784                           
  1785 ;; *************** function _habilita_canal_AD *****************
  1786 ;; Defined at:
  1787 ;;		line 311 in file "SanUSB48X.h"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  canal           1    wreg     unsigned char 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  canal           1   14[COMRAM] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;		None               void
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1801 ;;      Params:         0       0       0       0       0       0       0       0       0
  1802 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1804 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1805 ;;Total ram usage:        1 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    1
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text7
  1816  00745E                     __ptext7:
  1817                           	opt stack 0
  1818  00745E                     _habilita_canal_AD:
  1819                           	opt stack 29
  1820                           
  1821                           ;incstack = 0
  1822                           ;habilita_canal_AD@canal stored from wreg
  1823  00745E  CFE8 F03C          	movff	wreg,habilita_canal_AD@canal
  1824                           
  1825                           ;SanUSB48X.h: 312: ADCON1 =REG+canal;
  1826  007462  5005               	movf	_REG,w,c
  1827  007464  243C               	addwf	habilita_canal_AD@canal,w,c
  1828  007466  6EC1               	movwf	4033,c	;volatile
  1829                           
  1830                           ;SanUSB48X.h: 313: ADCON2=REG+0b00000111;
  1831  007468  5005               	movf	_REG,w,c
  1832  00746A  0F07               	addlw	7
  1833  00746C  6EC0               	movwf	4032,c	;volatile
  1834  00746E  0012               	return	
  1835  007470                     __end_of_habilita_canal_AD:
  1836                           	opt stack 0
  1837                           tblptru	equ	0xFF8
  1838                           tblptrh	equ	0xFF7
  1839                           tblptrl	equ	0xFF6
  1840                           tablat	equ	0xFF5
  1841                           prodh	equ	0xFF4
  1842                           prodl	equ	0xFF3
  1843                           postinc0	equ	0xFEE
  1844                           wreg	equ	0xFE8
  1845                           postdec1	equ	0xFE5
  1846                           fsr1l	equ	0xFE1
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function _clock_int_48MHz *****************
  1850 ;; Defined at:
  1851 ;;		line 435 in file "SanUSB48X.h"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;		None               void
  1858 ;; Registers used:
  1859 ;;		wreg, status,2, status,0, prodl, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1865 ;;      Params:         0       0       0       0       0       0       0       0       0
  1866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1868 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1869 ;;Total ram usage:        0 bytes
  1870 ;; Hardware stack levels used:    1
  1871 ;; Hardware stack levels required when called:    2
  1872 ;; This function calls:
  1873 ;;		___awmod
  1874 ;;		___lwdiv
  1875 ;;		_le_eeprom
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text8
  1882  0075BE                     __ptext8:
  1883                           	opt stack 0
  1884  0075BE                     _clock_int_48MHz:
  1885                           	opt stack 28
  1886                           
  1887                           ;SanUSB48X.h: 438: EEADR = 0B11111101;
  1888                           
  1889                           ;incstack = 0
  1890  0075BE  0EFD               	movlw	253
  1891  0075C0  6EA9               	movwf	4009,c	;volatile
  1892                           
  1893                           ;SanUSB48X.h: 439: EECON1=EEADR & 0B00001011;
  1894  0075C2  50A9               	movf	4009,w,c	;volatile
  1895  0075C4  0B0B               	andlw	11
  1896  0075C6  6EA6               	movwf	4006,c	;volatile
  1897  0075C8                     l378:
  1898  0075C8  66A8               	tstfsz	4008,c	;volatile
  1899  0075CA  D7FE               	goto	l378
  1900                           
  1901                           ;SanUSB48X.h: 441: REGad=R/((EEADR%126)<<4);
  1902  0075CC  C001  F043         	movff	_R,___lwdiv@dividend
  1903  0075D0  C002  F044         	movff	_R+1,___lwdiv@dividend+1
  1904  0075D4  0E00               	movlw	0
  1905  0075D6  6E3F               	movwf	___awmod@divisor+1,c
  1906  0075D8  0E7E               	movlw	126
  1907  0075DA  6E3E               	movwf	___awmod@divisor,c
  1908  0075DC  CFA9 F03C          	movff	4009,___awmod@dividend	;volatile
  1909  0075E0  6A3D               	clrf	___awmod@dividend+1,c
  1910  0075E2  EC06  F03C         	call	___awmod	;wreg free
  1911  0075E6  3A3C               	swapf	?___awmod,f,c
  1912  0075E8  3A3D               	swapf	?___awmod+1,f,c
  1913  0075EA  0EF0               	movlw	240
  1914  0075EC  163D               	andwf	?___awmod+1,f,c
  1915  0075EE  503C               	movf	?___awmod,w,c
  1916  0075F0  0B0F               	andlw	15
  1917  0075F2  123D               	iorwf	?___awmod+1,f,c
  1918  0075F4  0EF0               	movlw	240
  1919  0075F6  163C               	andwf	?___awmod,f,c
  1920  0075F8  C03C  F045         	movff	?___awmod,___lwdiv@divisor
  1921  0075FC  C03D  F046         	movff	?___awmod+1,___lwdiv@divisor+1
  1922  007600  EC09  F03B         	call	___lwdiv	;wreg free
  1923  007604  5043               	movf	?___lwdiv,w,c
  1924  007606  6E06               	movwf	_REGad,c
  1925                           
  1926                           ;SanUSB48X.h: 442: REG=le_eeprom(REGad);
  1927  007608  5006               	movf	_REGad,w,c
  1928  00760A  EC38  F03A         	call	_le_eeprom
  1929  00760E  6E05               	movwf	_REG,c
  1930  007610  0012               	return	
  1931  007612                     __end_of_clock_int_48MHz:
  1932                           	opt stack 0
  1933                           tblptru	equ	0xFF8
  1934                           tblptrh	equ	0xFF7
  1935                           tblptrl	equ	0xFF6
  1936                           tablat	equ	0xFF5
  1937                           prodh	equ	0xFF4
  1938                           prodl	equ	0xFF3
  1939                           postinc0	equ	0xFEE
  1940                           wreg	equ	0xFE8
  1941                           postdec1	equ	0xFE5
  1942                           fsr1l	equ	0xFE1
  1943                           status	equ	0xFD8
  1944                           
  1945 ;; *************** function _le_eeprom *****************
  1946 ;; Defined at:
  1947 ;;		line 425 in file "SanUSB48X.h"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  endereco        1    wreg     unsigned char 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  endereco        1   14[COMRAM] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      unsigned char 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1961 ;;      Params:         0       0       0       0       0       0       0       0       0
  1962 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1964 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1965 ;;Total ram usage:        1 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    1
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_clock_int_48MHz
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text9
  1976  007470                     __ptext9:
  1977                           	opt stack 0
  1978  007470                     _le_eeprom:
  1979                           	opt stack 28
  1980                           
  1981                           ;incstack = 0
  1982                           ;le_eeprom@endereco stored from wreg
  1983  007470  CFE8 F03C          	movff	wreg,le_eeprom@endereco
  1984                           
  1985                           ;SanUSB48X.h: 427: EEADR = endereco;
  1986  007474  C03C  FFA9         	movff	le_eeprom@endereco,4009	;volatile
  1987                           
  1988                           ;SanUSB48X.h: 428: EECON1bits.WREN = 0;
  1989  007478  94A6               	bcf	4006,2,c	;volatile
  1990                           
  1991                           ;SanUSB48X.h: 429: EECON1bits.EEPGD = 0;
  1992  00747A  9EA6               	bcf	4006,7,c	;volatile
  1993                           
  1994                           ;SanUSB48X.h: 430: EECON1bits.CFGS = 0;
  1995  00747C  9CA6               	bcf	4006,6,c	;volatile
  1996                           
  1997                           ;SanUSB48X.h: 431: EECON1bits.RD = 1;
  1998  00747E  80A6               	bsf	4006,0,c	;volatile
  1999                           
  2000                           ;SanUSB48X.h: 432: return EEDATA;
  2001  007480  50A8               	movf	4008,w,c	;volatile
  2002  007482  0012               	return	
  2003  007484                     __end_of_le_eeprom:
  2004                           	opt stack 0
  2005                           tblptru	equ	0xFF8
  2006                           tblptrh	equ	0xFF7
  2007                           tblptrl	equ	0xFF6
  2008                           tablat	equ	0xFF5
  2009                           prodh	equ	0xFF4
  2010                           prodl	equ	0xFF3
  2011                           postinc0	equ	0xFEE
  2012                           wreg	equ	0xFE8
  2013                           postdec1	equ	0xFE5
  2014                           fsr1l	equ	0xFE1
  2015                           status	equ	0xFD8
  2016                           
  2017 ;; *************** function ___lwdiv *****************
  2018 ;; Defined at:
  2019 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  dividend        2   21[COMRAM] unsigned int 
  2022 ;;  divisor         2   23[COMRAM] unsigned int 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  quotient        2   26[COMRAM] unsigned int 
  2025 ;;  counter         1   28[COMRAM] unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  2   21[COMRAM] unsigned int 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2035 ;;      Params:         4       0       0       0       0       0       0       0       0
  2036 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2037 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2038 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2039 ;;Total ram usage:        8 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    1
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_clock_int_48MHz
  2046 ;;		_sendnum
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text10
  2051  007612                     __ptext10:
  2052                           	opt stack 0
  2053  007612                     ___lwdiv:
  2054                           	opt stack 28
  2055                           
  2056                           ;incstack = 0
  2057  007612  0E00               	movlw	0
  2058  007614  6E49               	movwf	___lwdiv@quotient+1,c
  2059  007616  0E00               	movlw	0
  2060  007618  6E48               	movwf	___lwdiv@quotient,c
  2061  00761A  5046               	movf	___lwdiv@divisor+1,w,c
  2062  00761C  1045               	iorwf	___lwdiv@divisor,w,c
  2063  00761E  B4D8               	btfsc	status,2,c
  2064  007620  D01E               	goto	l1054
  2065  007622  6E47               	movwf	??___lwdiv& (0+255),c
  2066  007624  0E01               	movlw	1
  2067  007626  6E4A               	movwf	___lwdiv@counter,c
  2068  007628  5047               	movf	??___lwdiv& (0+255),w,c
  2069  00762A  D004               	goto	l1780
  2070  00762C                     l1778:
  2071  00762C  90D8               	bcf	status,0,c
  2072  00762E  3645               	rlcf	___lwdiv@divisor,f,c
  2073  007630  3646               	rlcf	___lwdiv@divisor+1,f,c
  2074  007632  2A4A               	incf	___lwdiv@counter,f,c
  2075  007634                     l1780:
  2076  007634  AE46               	btfss	___lwdiv@divisor+1,7,c
  2077  007636  D7FA               	goto	l1778
  2078  007638                     l1782:
  2079  007638  90D8               	bcf	status,0,c
  2080  00763A  3648               	rlcf	___lwdiv@quotient,f,c
  2081  00763C  3649               	rlcf	___lwdiv@quotient+1,f,c
  2082  00763E  5045               	movf	___lwdiv@divisor,w,c
  2083  007640  5C43               	subwf	___lwdiv@dividend,w,c
  2084  007642  5046               	movf	___lwdiv@divisor+1,w,c
  2085  007644  5844               	subwfb	___lwdiv@dividend+1,w,c
  2086  007646  A0D8               	btfss	status,0,c
  2087  007648  D005               	goto	l1790
  2088  00764A  5045               	movf	___lwdiv@divisor,w,c
  2089  00764C  5E43               	subwf	___lwdiv@dividend,f,c
  2090  00764E  5046               	movf	___lwdiv@divisor+1,w,c
  2091  007650  5A44               	subwfb	___lwdiv@dividend+1,f,c
  2092  007652  8048               	bsf	___lwdiv@quotient,0,c
  2093  007654                     l1790:
  2094  007654  90D8               	bcf	status,0,c
  2095  007656  3246               	rrcf	___lwdiv@divisor+1,f,c
  2096  007658  3245               	rrcf	___lwdiv@divisor,f,c
  2097  00765A  2E4A               	decfsz	___lwdiv@counter,f,c
  2098  00765C  D7ED               	goto	l1782
  2099  00765E                     l1054:
  2100  00765E  C048  F043         	movff	___lwdiv@quotient,?___lwdiv
  2101  007662  C049  F044         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2102  007666  0012               	return	
  2103  007668                     __end_of___lwdiv:
  2104                           	opt stack 0
  2105                           tblptru	equ	0xFF8
  2106                           tblptrh	equ	0xFF7
  2107                           tblptrl	equ	0xFF6
  2108                           tablat	equ	0xFF5
  2109                           prodh	equ	0xFF4
  2110                           prodl	equ	0xFF3
  2111                           postinc0	equ	0xFEE
  2112                           wreg	equ	0xFE8
  2113                           postdec1	equ	0xFE5
  2114                           fsr1l	equ	0xFE1
  2115                           status	equ	0xFD8
  2116                           
  2117 ;; *************** function ___awmod *****************
  2118 ;; Defined at:
  2119 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  dividend        2   14[COMRAM] int 
  2122 ;;  divisor         2   16[COMRAM] int 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  sign            1   20[COMRAM] unsigned char 
  2125 ;;  counter         1   19[COMRAM] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  2   14[COMRAM] int 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0, prodl
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2135 ;;      Params:         4       0       0       0       0       0       0       0       0
  2136 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2137 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2138 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2139 ;;Total ram usage:        7 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    1
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_clock_int_48MHz
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text11
  2150  00780C                     __ptext11:
  2151                           	opt stack 0
  2152  00780C                     ___awmod:
  2153                           	opt stack 28
  2154                           
  2155                           ;incstack = 0
  2156  00780C  6E40               	movwf	??___awmod& (0+255),c
  2157  00780E  0E00               	movlw	0
  2158  007810  6E42               	movwf	___awmod@sign,c
  2159  007812  5040               	movf	??___awmod& (0+255),w,c
  2160  007814  503D               	movf	___awmod@dividend+1,w,c
  2161  007816  0A80               	xorlw	128
  2162  007818  6EF3               	movwf	prodl,c
  2163  00781A  0E80               	movlw	128
  2164  00781C  5CF3               	subwf	prodl,w,c
  2165  00781E  0E00               	movlw	0
  2166  007820  B4D8               	btfsc	status,2,c
  2167  007822  5C3C               	subwf	___awmod@dividend,w,c
  2168  007824  B0D8               	btfsc	status,0,c
  2169  007826  D008               	goto	l1744
  2170  007828  6C3C               	negf	___awmod@dividend,c
  2171  00782A  1E3D               	comf	___awmod@dividend+1,f,c
  2172  00782C  B0D8               	btfsc	status,0,c
  2173  00782E  2A3D               	incf	___awmod@dividend+1,f,c
  2174  007830  6E40               	movwf	??___awmod& (0+255),c
  2175  007832  0E01               	movlw	1
  2176  007834  6E42               	movwf	___awmod@sign,c
  2177  007836  5040               	movf	??___awmod& (0+255),w,c
  2178  007838                     l1744:
  2179  007838  503F               	movf	___awmod@divisor+1,w,c
  2180  00783A  0A80               	xorlw	128
  2181  00783C  6EF3               	movwf	prodl,c
  2182  00783E  0E80               	movlw	128
  2183  007840  5CF3               	subwf	prodl,w,c
  2184  007842  0E00               	movlw	0
  2185  007844  B4D8               	btfsc	status,2,c
  2186  007846  5C3E               	subwf	___awmod@divisor,w,c
  2187  007848  B0D8               	btfsc	status,0,c
  2188  00784A  D004               	goto	l1748
  2189  00784C  6C3E               	negf	___awmod@divisor,c
  2190  00784E  1E3F               	comf	___awmod@divisor+1,f,c
  2191  007850  B0D8               	btfsc	status,0,c
  2192  007852  2A3F               	incf	___awmod@divisor+1,f,c
  2193  007854                     l1748:
  2194  007854  503F               	movf	___awmod@divisor+1,w,c
  2195  007856  103E               	iorwf	___awmod@divisor,w,c
  2196  007858  B4D8               	btfsc	status,2,c
  2197  00785A  D01A               	goto	l1764
  2198  00785C  6E40               	movwf	??___awmod& (0+255),c
  2199  00785E  0E01               	movlw	1
  2200  007860  6E41               	movwf	___awmod@counter,c
  2201  007862  5040               	movf	??___awmod& (0+255),w,c
  2202  007864  D004               	goto	l1754
  2203  007866                     l1752:
  2204  007866  90D8               	bcf	status,0,c
  2205  007868  363E               	rlcf	___awmod@divisor,f,c
  2206  00786A  363F               	rlcf	___awmod@divisor+1,f,c
  2207  00786C  2A41               	incf	___awmod@counter,f,c
  2208  00786E                     l1754:
  2209  00786E  AE3F               	btfss	___awmod@divisor+1,7,c
  2210  007870  D7FA               	goto	l1752
  2211  007872                     l1756:
  2212  007872  503E               	movf	___awmod@divisor,w,c
  2213  007874  5C3C               	subwf	___awmod@dividend,w,c
  2214  007876  503F               	movf	___awmod@divisor+1,w,c
  2215  007878  583D               	subwfb	___awmod@dividend+1,w,c
  2216  00787A  A0D8               	btfss	status,0,c
  2217  00787C  D004               	goto	l1760
  2218  00787E  503E               	movf	___awmod@divisor,w,c
  2219  007880  5E3C               	subwf	___awmod@dividend,f,c
  2220  007882  503F               	movf	___awmod@divisor+1,w,c
  2221  007884  5A3D               	subwfb	___awmod@dividend+1,f,c
  2222  007886                     l1760:
  2223  007886  90D8               	bcf	status,0,c
  2224  007888  323F               	rrcf	___awmod@divisor+1,f,c
  2225  00788A  323E               	rrcf	___awmod@divisor,f,c
  2226  00788C  2E41               	decfsz	___awmod@counter,f,c
  2227  00788E  D7F1               	goto	l1756
  2228  007890                     l1764:
  2229  007890  5042               	movf	___awmod@sign,w,c
  2230  007892  B4D8               	btfsc	status,2,c
  2231  007894  D004               	goto	l1768
  2232  007896  6C3C               	negf	___awmod@dividend,c
  2233  007898  1E3D               	comf	___awmod@dividend+1,f,c
  2234  00789A  B0D8               	btfsc	status,0,c
  2235  00789C  2A3D               	incf	___awmod@dividend+1,f,c
  2236  00789E                     l1768:
  2237  00789E  C03C  F03C         	movff	___awmod@dividend,?___awmod
  2238  0078A2  C03D  F03D         	movff	___awmod@dividend+1,?___awmod+1
  2239  0078A6  0012               	return	
  2240  0078A8                     __end_of___awmod:
  2241                           	opt stack 0
  2242                           tblptru	equ	0xFF8
  2243                           tblptrh	equ	0xFF7
  2244                           tblptrl	equ	0xFF6
  2245                           tablat	equ	0xFF5
  2246                           prodh	equ	0xFF4
  2247                           prodl	equ	0xFF3
  2248                           postinc0	equ	0xFEE
  2249                           wreg	equ	0xFE8
  2250                           postdec1	equ	0xFE5
  2251                           fsr1l	equ	0xFE1
  2252                           status	equ	0xFD8
  2253                           
  2254 ;; *************** function _Lcd_Chr *****************
  2255 ;; Defined at:
  2256 ;;		line 176 in file "lcd.h"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  y               1    wreg     unsigned char 
  2259 ;;  x               1   18[COMRAM] unsigned char 
  2260 ;;  Chr             1   19[COMRAM] unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  y               1   20[COMRAM] unsigned char 
  2263 ;;  data            1   21[COMRAM] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;		None               void
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2273 ;;      Params:         2       0       0       0       0       0       0       0       0
  2274 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2276 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2277 ;;Total ram usage:        4 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    4
  2280 ;; This function calls:
  2281 ;;		_Lcd_Chr_CP
  2282 ;;		_Lcd_Cmd
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text12
  2289  00752E                     __ptext12:
  2290                           	opt stack 0
  2291  00752E                     _Lcd_Chr:
  2292                           	opt stack 26
  2293                           
  2294                           ;incstack = 0
  2295                           ;Lcd_Chr@y stored from wreg
  2296  00752E  CFE8 F042          	movff	wreg,Lcd_Chr@y
  2297                           
  2298                           ;lcd.h: 177: unsigned char data;
  2299                           ;lcd.h: 178: switch(y){
  2300  007532  D00D               	goto	l1966
  2301  007534                     l1956:
  2302  007534  5040               	movf	Lcd_Chr@x,w,c
  2303  007536  0F7F               	addlw	127
  2304  007538  D008               	goto	L9
  2305  00753A                     l1958:
  2306  00753A  5040               	movf	Lcd_Chr@x,w,c
  2307  00753C  0FBF               	addlw	191
  2308  00753E  D005               	goto	L9
  2309  007540                     l1960:
  2310  007540  5040               	movf	Lcd_Chr@x,w,c
  2311  007542  0F93               	addlw	147
  2312  007544  D002               	goto	L9
  2313  007546                     l1962:
  2314  007546  5040               	movf	Lcd_Chr@x,w,c
  2315  007548  0FD3               	addlw	211
  2316  00754A                     L9:
  2317  00754A  6E43               	movwf	Lcd_Chr@data,c
  2318  00754C  D00D               	goto	l1968
  2319  00754E                     l1966:
  2320  00754E  5042               	movf	Lcd_Chr@y,w,c
  2321                           
  2322                           ; Switch size 1, requested type "space"
  2323                           ; Number of cases is 4, Range of values is 1 to 4
  2324                           ; switch strategies available:
  2325                           ; Name         Instructions Cycles
  2326                           ; simple_byte           13     7 (average)
  2327                           ;	Chosen strategy is simple_byte
  2328  007550  0A01               	xorlw	1	; case 1
  2329  007552  B4D8               	btfsc	status,2,c
  2330  007554  D7EF               	goto	l1956
  2331  007556  0A03               	xorlw	3	; case 2
  2332  007558  B4D8               	btfsc	status,2,c
  2333  00755A  D7EF               	goto	l1958
  2334  00755C  0A01               	xorlw	1	; case 3
  2335  00755E  B4D8               	btfsc	status,2,c
  2336  007560  D7EF               	goto	l1960
  2337  007562  0A07               	xorlw	7	; case 4
  2338  007564  B4D8               	btfsc	status,2,c
  2339  007566  D7EF               	goto	l1962
  2340  007568                     l1968:
  2341                           
  2342                           ;lcd.h: 184: Lcd_Cmd(data);
  2343  007568  5043               	movf	Lcd_Chr@data,w,c
  2344  00756A  ECB6  F03D         	call	_Lcd_Cmd
  2345                           
  2346                           ;lcd.h: 185: Lcd_Chr_CP(Chr);
  2347  00756E  5041               	movf	Lcd_Chr@Chr,w,c
  2348  007570  EC4A  F03E         	call	_Lcd_Chr_CP
  2349  007574  0012               	return	
  2350  007576                     __end_of_Lcd_Chr:
  2351                           	opt stack 0
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           prodh	equ	0xFF4
  2357                           prodl	equ	0xFF3
  2358                           postinc0	equ	0xFEE
  2359                           wreg	equ	0xFE8
  2360                           postdec1	equ	0xFE5
  2361                           fsr1l	equ	0xFE1
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function _CGRAM_SanUSB *****************
  2365 ;; Defined at:
  2366 ;;		line 216 in file "lcd.h"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  location        1    wreg     unsigned char 
  2369 ;;  ptr             2   18[COMRAM] PTR unsigned char 
  2370 ;;		 -> b1(7), vazio(8), fecha2(8), abre2(8), 
  2371 ;;		 -> fecha1(8), abre1(8), 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  location        1   23[COMRAM] unsigned char 
  2374 ;;  j               1   25[COMRAM] unsigned char 
  2375 ;;  i               1   24[COMRAM] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;		None               void
  2378 ;; Registers used:
  2379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2385 ;;      Params:         2       0       0       0       0       0       0       0       0
  2386 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2387 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2388 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2389 ;;Total ram usage:        8 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    4
  2392 ;; This function calls:
  2393 ;;		_Lcd_Chr_CP
  2394 ;;		_Lcd_Cmd
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text13
  2401  0077A0                     __ptext13:
  2402                           	opt stack 0
  2403  0077A0                     _CGRAM_SanUSB:
  2404                           	opt stack 26
  2405                           
  2406                           ;incstack = 0
  2407                           ;CGRAM_SanUSB@location stored from wreg
  2408  0077A0  CFE8 F045          	movff	wreg,CGRAM_SanUSB@location
  2409                           
  2410                           ;lcd.h: 217: unsigned char i,j=(s+1)>>4;
  2411  0077A4  5050               	movf	_s,w,c
  2412  0077A6  6E42               	movwf	??_CGRAM_SanUSB& (0+255),c
  2413  0077A8  6A43               	clrf	(??_CGRAM_SanUSB+1)& (0+255),c
  2414  0077AA  0E01               	movlw	1
  2415  0077AC  2642               	addwf	??_CGRAM_SanUSB,f,c
  2416  0077AE  0E00               	movlw	0
  2417  0077B0  2243               	addwfc	??_CGRAM_SanUSB+1,f,c
  2418  0077B2  0E04               	movlw	4
  2419  0077B4  6E44               	movwf	(??_CGRAM_SanUSB+2)& (0+255),c
  2420  0077B6                     u335:
  2421  0077B6  3443               	rlcf	??_CGRAM_SanUSB+1,w,c
  2422  0077B8  3243               	rrcf	??_CGRAM_SanUSB+1,f,c
  2423  0077BA  3242               	rrcf	??_CGRAM_SanUSB,f,c
  2424  0077BC  2E44               	decfsz	(??_CGRAM_SanUSB+2)& (0+255),f,c
  2425  0077BE  D7FB               	goto	u335
  2426  0077C0  5042               	movf	??_CGRAM_SanUSB,w,c
  2427  0077C2  6E47               	movwf	CGRAM_SanUSB@j,c
  2428                           
  2429                           ;lcd.h: 218: if(location<j){
  2430  0077C4  5047               	movf	CGRAM_SanUSB@j,w,c
  2431  0077C6  5C45               	subwf	CGRAM_SanUSB@location,w,c
  2432  0077C8  B0D8               	btfsc	status,0,c
  2433  0077CA  D01F               	goto	l510
  2434                           
  2435                           ;lcd.h: 219: Lcd_Cmd(j*j+(location*j));
  2436  0077CC  5045               	movf	CGRAM_SanUSB@location,w,c
  2437  0077CE  0247               	mulwf	CGRAM_SanUSB@j,c
  2438  0077D0  CFF3 F042          	movff	prodl,??_CGRAM_SanUSB
  2439  0077D4  5047               	movf	CGRAM_SanUSB@j,w,c
  2440  0077D6  0247               	mulwf	CGRAM_SanUSB@j,c
  2441  0077D8  50F3               	movf	prodl,w,c
  2442  0077DA  2442               	addwf	??_CGRAM_SanUSB,w,c
  2443  0077DC  ECB6  F03D         	call	_Lcd_Cmd
  2444                           
  2445                           ;lcd.h: 220: for(i=0;i<j;i++)
  2446  0077E0  6E42               	movwf	??_CGRAM_SanUSB& (0+255),c
  2447  0077E2  0E00               	movlw	0
  2448  0077E4  6E46               	movwf	CGRAM_SanUSB@i,c
  2449  0077E6  5042               	movf	??_CGRAM_SanUSB& (0+255),w,c
  2450  0077E8  D00C               	goto	l1980
  2451  0077EA                     l1976:
  2452                           
  2453                           ;lcd.h: 221: Lcd_Chr_CP(ptr[ i ]);
  2454  0077EA  5046               	movf	CGRAM_SanUSB@i,w,c
  2455  0077EC  0D01               	mullw	1
  2456  0077EE  50F3               	movf	prodl,w,c
  2457  0077F0  2440               	addwf	CGRAM_SanUSB@ptr,w,c
  2458  0077F2  6ED9               	movwf	fsr2l,c
  2459  0077F4  50F4               	movf	prodh,w,c
  2460  0077F6  2041               	addwfc	CGRAM_SanUSB@ptr+1,w,c
  2461  0077F8  6EDA               	movwf	fsr2h,c
  2462  0077FA  50DF               	movf	indf2,w,c
  2463  0077FC  EC4A  F03E         	call	_Lcd_Chr_CP
  2464  007800  2A46               	incf	CGRAM_SanUSB@i,f,c
  2465  007802                     l1980:
  2466  007802  5047               	movf	CGRAM_SanUSB@j,w,c
  2467  007804  5C46               	subwf	CGRAM_SanUSB@i,w,c
  2468  007806  A0D8               	btfss	status,0,c
  2469  007808  D7F0               	goto	l1976
  2470  00780A                     l510:
  2471  00780A  0012               	return	
  2472  00780C                     __end_of_CGRAM_SanUSB:
  2473                           	opt stack 0
  2474                           tblptru	equ	0xFF8
  2475                           tblptrh	equ	0xFF7
  2476                           tblptrl	equ	0xFF6
  2477                           tablat	equ	0xFF5
  2478                           prodh	equ	0xFF4
  2479                           prodl	equ	0xFF3
  2480                           postinc0	equ	0xFEE
  2481                           wreg	equ	0xFE8
  2482                           postdec1	equ	0xFE5
  2483                           fsr1l	equ	0xFE1
  2484                           indf2	equ	0xFDF
  2485                           fsr2h	equ	0xFDA
  2486                           fsr2l	equ	0xFD9
  2487                           status	equ	0xFD8
  2488                           
  2489 ;; *************** function _Lcd_Cmd *****************
  2490 ;; Defined at:
  2491 ;;		line 202 in file "lcd.h"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  Cmd             1    wreg     unsigned char 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  Cmd             1   17[COMRAM] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;		None               void
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2505 ;;      Params:         0       0       0       0       0       0       0       0       0
  2506 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2507 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2508 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2509 ;;Total ram usage:        3 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    3
  2512 ;; This function calls:
  2513 ;;		_Delay_5500us
  2514 ;;		_Delay_5us
  2515 ;; This function is called by:
  2516 ;;		_lcd_ini
  2517 ;;		_lcd_escreve
  2518 ;;		_Lcd_Chr
  2519 ;;		_CGRAM_SanUSB
  2520 ;;		_main
  2521 ;;		_lcd_escreve2
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text14
  2526  007B6C                     __ptext14:
  2527                           	opt stack 0
  2528  007B6C                     _Lcd_Cmd:
  2529                           	opt stack 26
  2530                           
  2531                           ;incstack = 0
  2532                           ;Lcd_Cmd@Cmd stored from wreg
  2533  007B6C  CFE8 F03F          	movff	wreg,Lcd_Cmd@Cmd
  2534                           
  2535                           ;lcd.h: 203: LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  2536  007B70  988A               	bcf	3978,4,c	;volatile
  2537  007B72  9A8A               	bcf	3978,5,c	;volatile
  2538                           
  2539                           ;lcd.h: 204: LATBbits.LATB3 = (Cmd & 0b10000000)>>7; LATBbits.LATB2 = (Cmd & 0b01000000)
      +                          >>6;
  2540  007B74  6A3D               	clrf	??_Lcd_Cmd& (0+255),c
  2541  007B76  AE3F               	btfss	Lcd_Cmd@Cmd,7,c
  2542  007B78  D001               	bra	u15
  2543  007B7A  2A3D               	incf	??_Lcd_Cmd& (0+255),f,c
  2544  007B7C                     u15:
  2545  007B7C  0E01               	movlw	1
  2546  007B7E  163D               	andwf	??_Lcd_Cmd,f,c
  2547  007B80  463D               	rlncf	??_Lcd_Cmd,f,c
  2548  007B82  463D               	rlncf	??_Lcd_Cmd,f,c
  2549  007B84  463D               	rlncf	??_Lcd_Cmd,f,c
  2550  007B86  508A               	movf	3978,w,c	;volatile
  2551  007B88  183D               	xorwf	??_Lcd_Cmd,w,c
  2552  007B8A  0BF7               	andlw	-9
  2553  007B8C  183D               	xorwf	??_Lcd_Cmd,w,c
  2554  007B8E  6E8A               	movwf	3978,c	;volatile
  2555  007B90  C03F  F03D         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  2556  007B94  0E06               	movlw	6
  2557  007B96  6E3E               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  2558  007B98                     u25:
  2559  007B98  90D8               	bcf	status,0,c
  2560  007B9A  323D               	rrcf	??_Lcd_Cmd,f,c
  2561  007B9C  2E3E               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  2562  007B9E  D7FC               	goto	u25
  2563  007BA0  0E01               	movlw	1
  2564  007BA2  163D               	andwf	??_Lcd_Cmd,f,c
  2565  007BA4  463D               	rlncf	??_Lcd_Cmd,f,c
  2566  007BA6  463D               	rlncf	??_Lcd_Cmd,f,c
  2567  007BA8  508A               	movf	3978,w,c	;volatile
  2568  007BAA  183D               	xorwf	??_Lcd_Cmd,w,c
  2569  007BAC  0BFB               	andlw	-5
  2570  007BAE  183D               	xorwf	??_Lcd_Cmd,w,c
  2571  007BB0  6E8A               	movwf	3978,c	;volatile
  2572                           
  2573                           ;lcd.h: 205: LATBbits.LATB1 = (Cmd & 0b00100000)>>5; LATBbits.LATB0 = (Cmd & 0b00010000)
      +                          >>4;
  2574  007BB2  C03F  F03D         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  2575  007BB6  0E05               	movlw	5
  2576  007BB8  6E3E               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  2577  007BBA                     u35:
  2578  007BBA  90D8               	bcf	status,0,c
  2579  007BBC  323D               	rrcf	??_Lcd_Cmd,f,c
  2580  007BBE  2E3E               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  2581  007BC0  D7FC               	goto	u35
  2582  007BC2  0E01               	movlw	1
  2583  007BC4  163D               	andwf	??_Lcd_Cmd,f,c
  2584  007BC6  463D               	rlncf	??_Lcd_Cmd,f,c
  2585  007BC8  508A               	movf	3978,w,c	;volatile
  2586  007BCA  183D               	xorwf	??_Lcd_Cmd,w,c
  2587  007BCC  0BFD               	andlw	-3
  2588  007BCE  183D               	xorwf	??_Lcd_Cmd,w,c
  2589  007BD0  6E8A               	movwf	3978,c	;volatile
  2590  007BD2  C03F  F03D         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  2591  007BD6  3A3D               	swapf	??_Lcd_Cmd,f,c
  2592  007BD8  0E0F               	movlw	15
  2593  007BDA  163D               	andwf	??_Lcd_Cmd,f,c
  2594  007BDC  0E01               	movlw	1
  2595  007BDE  163D               	andwf	??_Lcd_Cmd,f,c
  2596  007BE0  508A               	movf	3978,w,c	;volatile
  2597  007BE2  183D               	xorwf	??_Lcd_Cmd,w,c
  2598  007BE4  0BFE               	andlw	-2
  2599  007BE6  183D               	xorwf	??_Lcd_Cmd,w,c
  2600  007BE8  6E8A               	movwf	3978,c	;volatile
  2601                           
  2602                           ;lcd.h: 206: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  2603  007BEA  F000               	nop	
  2604  007BEC  F000               	nop	
  2605  007BEE  F000               	nop	
  2606  007BF0  F000               	nop	
  2607  007BF2  F000               	nop	
  2608  007BF4  F000               	nop	
  2609  007BF6  F000               	nop	
  2610  007BF8  F000               	nop	
  2611  007BFA  F000               	nop	
  2612  007BFC  F000               	nop	
  2613                           
  2614                           ;lcd.h: 207: LATBbits.LATB4 = 1; Delay_5us(); LATBbits.LATB4 = 0;
  2615  007BFE  888A               	bsf	3978,4,c	;volatile
  2616  007C00  EC34  F03B         	call	_Delay_5us	;wreg free
  2617  007C04  988A               	bcf	3978,4,c	;volatile
  2618                           
  2619                           ;lcd.h: 209: LATBbits.LATB3 = (Cmd & 0b00001000)>>3; LATBbits.LATB2 = (Cmd & 0b00000100)
      +                          >>2;
  2620  007C06  C03F  F03D         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  2621  007C0A  90D8               	bcf	status,0,c
  2622  007C0C  323D               	rrcf	??_Lcd_Cmd,f,c
  2623  007C0E  90D8               	bcf	status,0,c
  2624  007C10  323D               	rrcf	??_Lcd_Cmd,f,c
  2625  007C12  90D8               	bcf	status,0,c
  2626  007C14  323D               	rrcf	??_Lcd_Cmd,f,c
  2627  007C16  0E01               	movlw	1
  2628  007C18  163D               	andwf	??_Lcd_Cmd,f,c
  2629  007C1A  463D               	rlncf	??_Lcd_Cmd,f,c
  2630  007C1C  463D               	rlncf	??_Lcd_Cmd,f,c
  2631  007C1E  463D               	rlncf	??_Lcd_Cmd,f,c
  2632  007C20  508A               	movf	3978,w,c	;volatile
  2633  007C22  183D               	xorwf	??_Lcd_Cmd,w,c
  2634  007C24  0BF7               	andlw	-9
  2635  007C26  183D               	xorwf	??_Lcd_Cmd,w,c
  2636  007C28  6E8A               	movwf	3978,c	;volatile
  2637  007C2A  C03F  F03D         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  2638  007C2E  90D8               	bcf	status,0,c
  2639  007C30  323D               	rrcf	??_Lcd_Cmd,f,c
  2640  007C32  90D8               	bcf	status,0,c
  2641  007C34  323D               	rrcf	??_Lcd_Cmd,f,c
  2642  007C36  0E01               	movlw	1
  2643  007C38  163D               	andwf	??_Lcd_Cmd,f,c
  2644  007C3A  463D               	rlncf	??_Lcd_Cmd,f,c
  2645  007C3C  463D               	rlncf	??_Lcd_Cmd,f,c
  2646  007C3E  508A               	movf	3978,w,c	;volatile
  2647  007C40  183D               	xorwf	??_Lcd_Cmd,w,c
  2648  007C42  0BFB               	andlw	-5
  2649  007C44  183D               	xorwf	??_Lcd_Cmd,w,c
  2650  007C46  6E8A               	movwf	3978,c	;volatile
  2651                           
  2652                           ;lcd.h: 210: LATBbits.LATB1 = (Cmd & 0b00000010)>>1; LATBbits.LATB0 = (Cmd & 0b00000001);
  2653  007C48  C03F  F03D         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  2654  007C4C  90D8               	bcf	status,0,c
  2655  007C4E  323D               	rrcf	??_Lcd_Cmd,f,c
  2656  007C50  0E01               	movlw	1
  2657  007C52  163D               	andwf	??_Lcd_Cmd,f,c
  2658  007C54  463D               	rlncf	??_Lcd_Cmd,f,c
  2659  007C56  508A               	movf	3978,w,c	;volatile
  2660  007C58  183D               	xorwf	??_Lcd_Cmd,w,c
  2661  007C5A  0BFD               	andlw	-3
  2662  007C5C  183D               	xorwf	??_Lcd_Cmd,w,c
  2663  007C5E  6E8A               	movwf	3978,c	;volatile
  2664  007C60  C03F  F03D         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  2665  007C64  0E01               	movlw	1
  2666  007C66  163D               	andwf	??_Lcd_Cmd,f,c
  2667  007C68  508A               	movf	3978,w,c	;volatile
  2668  007C6A  183D               	xorwf	??_Lcd_Cmd,w,c
  2669  007C6C  0BFE               	andlw	-2
  2670  007C6E  183D               	xorwf	??_Lcd_Cmd,w,c
  2671  007C70  6E8A               	movwf	3978,c	;volatile
  2672                           
  2673                           ;lcd.h: 211: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  2674  007C72  F000               	nop	
  2675  007C74  F000               	nop	
  2676  007C76  F000               	nop	
  2677  007C78  F000               	nop	
  2678  007C7A  F000               	nop	
  2679  007C7C  F000               	nop	
  2680  007C7E  F000               	nop	
  2681  007C80  F000               	nop	
  2682  007C82  F000               	nop	
  2683  007C84  F000               	nop	
  2684                           
  2685                           ;lcd.h: 212: LATBbits.LATB4 = 1; Delay_5us(); LATBbits.LATB4 = 0;
  2686  007C86  888A               	bsf	3978,4,c	;volatile
  2687  007C88  EC34  F03B         	call	_Delay_5us	;wreg free
  2688  007C8C  988A               	bcf	3978,4,c	;volatile
  2689                           
  2690                           ;lcd.h: 213: Delay_5500us();
  2691  007C8E  EC22  F03A         	call	_Delay_5500us	;wreg free
  2692  007C92  0012               	return	
  2693  007C94                     __end_of_Lcd_Cmd:
  2694                           	opt stack 0
  2695                           tblptru	equ	0xFF8
  2696                           tblptrh	equ	0xFF7
  2697                           tblptrl	equ	0xFF6
  2698                           tablat	equ	0xFF5
  2699                           prodh	equ	0xFF4
  2700                           prodl	equ	0xFF3
  2701                           postinc0	equ	0xFEE
  2702                           wreg	equ	0xFE8
  2703                           postdec1	equ	0xFE5
  2704                           fsr1l	equ	0xFE1
  2705                           indf2	equ	0xFDF
  2706                           fsr2h	equ	0xFDA
  2707                           fsr2l	equ	0xFD9
  2708                           status	equ	0xFD8
  2709                           
  2710 ;; *************** function _Lcd_Chr_CP *****************
  2711 ;; Defined at:
  2712 ;;		line 188 in file "lcd.h"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  Chr_CP          1    wreg     unsigned char 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  Chr_CP          1   17[COMRAM] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;		None               void
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2726 ;;      Params:         0       0       0       0       0       0       0       0       0
  2727 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2728 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2729 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2730 ;;Total ram usage:        3 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    3
  2733 ;; This function calls:
  2734 ;;		_Delay_5500us
  2735 ;;		_Delay_5us
  2736 ;; This function is called by:
  2737 ;;		_lcd_escreve
  2738 ;;		_Lcd_Chr
  2739 ;;		_CGRAM_SanUSB
  2740 ;;		_lcd_escreve2
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text15
  2745  007C94                     __ptext15:
  2746                           	opt stack 0
  2747  007C94                     _Lcd_Chr_CP:
  2748                           	opt stack 26
  2749                           
  2750                           ;incstack = 0
  2751                           ;Lcd_Chr_CP@Chr_CP stored from wreg
  2752  007C94  CFE8 F03F          	movff	wreg,Lcd_Chr_CP@Chr_CP
  2753                           
  2754                           ;lcd.h: 189: LATBbits.LATB4 = 0; LATBbits.LATB5 = 1;
  2755  007C98  988A               	bcf	3978,4,c	;volatile
  2756  007C9A  8A8A               	bsf	3978,5,c	;volatile
  2757                           
  2758                           ;lcd.h: 190: LATBbits.LATB3 = (Chr_CP & 0b10000000)>>7; LATBbits.LATB2 = (Chr_CP & 0b010
      +                          00000)>>6;
  2759  007C9C  6A3D               	clrf	??_Lcd_Chr_CP& (0+255),c
  2760  007C9E  AE3F               	btfss	Lcd_Chr_CP@Chr_CP,7,c
  2761  007CA0  D001               	bra	u45
  2762  007CA2  2A3D               	incf	??_Lcd_Chr_CP& (0+255),f,c
  2763  007CA4                     u45:
  2764  007CA4  0E01               	movlw	1
  2765  007CA6  163D               	andwf	??_Lcd_Chr_CP,f,c
  2766  007CA8  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2767  007CAA  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2768  007CAC  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2769  007CAE  508A               	movf	3978,w,c	;volatile
  2770  007CB0  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2771  007CB2  0BF7               	andlw	-9
  2772  007CB4  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2773  007CB6  6E8A               	movwf	3978,c	;volatile
  2774  007CB8  C03F  F03D         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  2775  007CBC  0E06               	movlw	6
  2776  007CBE  6E3E               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  2777  007CC0                     u55:
  2778  007CC0  90D8               	bcf	status,0,c
  2779  007CC2  323D               	rrcf	??_Lcd_Chr_CP,f,c
  2780  007CC4  2E3E               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  2781  007CC6  D7FC               	goto	u55
  2782  007CC8  0E01               	movlw	1
  2783  007CCA  163D               	andwf	??_Lcd_Chr_CP,f,c
  2784  007CCC  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2785  007CCE  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2786  007CD0  508A               	movf	3978,w,c	;volatile
  2787  007CD2  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2788  007CD4  0BFB               	andlw	-5
  2789  007CD6  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2790  007CD8  6E8A               	movwf	3978,c	;volatile
  2791                           
  2792                           ;lcd.h: 191: LATBbits.LATB1 = (Chr_CP & 0b00100000)>>5; LATBbits.LATB0 = (Chr_CP & 0b000
      +                          10000)>>4;
  2793  007CDA  C03F  F03D         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  2794  007CDE  0E05               	movlw	5
  2795  007CE0  6E3E               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  2796  007CE2                     u65:
  2797  007CE2  90D8               	bcf	status,0,c
  2798  007CE4  323D               	rrcf	??_Lcd_Chr_CP,f,c
  2799  007CE6  2E3E               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  2800  007CE8  D7FC               	goto	u65
  2801  007CEA  0E01               	movlw	1
  2802  007CEC  163D               	andwf	??_Lcd_Chr_CP,f,c
  2803  007CEE  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2804  007CF0  508A               	movf	3978,w,c	;volatile
  2805  007CF2  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2806  007CF4  0BFD               	andlw	-3
  2807  007CF6  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2808  007CF8  6E8A               	movwf	3978,c	;volatile
  2809  007CFA  C03F  F03D         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  2810  007CFE  3A3D               	swapf	??_Lcd_Chr_CP,f,c
  2811  007D00  0E0F               	movlw	15
  2812  007D02  163D               	andwf	??_Lcd_Chr_CP,f,c
  2813  007D04  0E01               	movlw	1
  2814  007D06  163D               	andwf	??_Lcd_Chr_CP,f,c
  2815  007D08  508A               	movf	3978,w,c	;volatile
  2816  007D0A  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2817  007D0C  0BFE               	andlw	-2
  2818  007D0E  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2819  007D10  6E8A               	movwf	3978,c	;volatile
  2820                           
  2821                           ;lcd.h: 192: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  2822  007D12  F000               	nop	
  2823  007D14  F000               	nop	
  2824  007D16  F000               	nop	
  2825  007D18  F000               	nop	
  2826  007D1A  F000               	nop	
  2827  007D1C  F000               	nop	
  2828  007D1E  F000               	nop	
  2829  007D20  F000               	nop	
  2830  007D22  F000               	nop	
  2831  007D24  F000               	nop	
  2832                           
  2833                           ;lcd.h: 193: LATBbits.LATB4 = 1; Delay_5us(); LATBbits.LATB4 = 0;
  2834  007D26  888A               	bsf	3978,4,c	;volatile
  2835  007D28  EC34  F03B         	call	_Delay_5us	;wreg free
  2836  007D2C  988A               	bcf	3978,4,c	;volatile
  2837                           
  2838                           ;lcd.h: 195: LATBbits.LATB3 = (Chr_CP & 0b00001000)>>3; LATBbits.LATB2 = (Chr_CP & 0b000
      +                          00100)>>2;
  2839  007D2E  C03F  F03D         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  2840  007D32  90D8               	bcf	status,0,c
  2841  007D34  323D               	rrcf	??_Lcd_Chr_CP,f,c
  2842  007D36  90D8               	bcf	status,0,c
  2843  007D38  323D               	rrcf	??_Lcd_Chr_CP,f,c
  2844  007D3A  90D8               	bcf	status,0,c
  2845  007D3C  323D               	rrcf	??_Lcd_Chr_CP,f,c
  2846  007D3E  0E01               	movlw	1
  2847  007D40  163D               	andwf	??_Lcd_Chr_CP,f,c
  2848  007D42  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2849  007D44  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2850  007D46  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2851  007D48  508A               	movf	3978,w,c	;volatile
  2852  007D4A  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2853  007D4C  0BF7               	andlw	-9
  2854  007D4E  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2855  007D50  6E8A               	movwf	3978,c	;volatile
  2856  007D52  C03F  F03D         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  2857  007D56  90D8               	bcf	status,0,c
  2858  007D58  323D               	rrcf	??_Lcd_Chr_CP,f,c
  2859  007D5A  90D8               	bcf	status,0,c
  2860  007D5C  323D               	rrcf	??_Lcd_Chr_CP,f,c
  2861  007D5E  0E01               	movlw	1
  2862  007D60  163D               	andwf	??_Lcd_Chr_CP,f,c
  2863  007D62  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2864  007D64  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2865  007D66  508A               	movf	3978,w,c	;volatile
  2866  007D68  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2867  007D6A  0BFB               	andlw	-5
  2868  007D6C  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2869  007D6E  6E8A               	movwf	3978,c	;volatile
  2870                           
  2871                           ;lcd.h: 196: LATBbits.LATB1 = (Chr_CP & 0b00000010)>>1; LATBbits.LATB0 = (Chr_CP & 0b000
      +                          00001);
  2872  007D70  C03F  F03D         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  2873  007D74  90D8               	bcf	status,0,c
  2874  007D76  323D               	rrcf	??_Lcd_Chr_CP,f,c
  2875  007D78  0E01               	movlw	1
  2876  007D7A  163D               	andwf	??_Lcd_Chr_CP,f,c
  2877  007D7C  463D               	rlncf	??_Lcd_Chr_CP,f,c
  2878  007D7E  508A               	movf	3978,w,c	;volatile
  2879  007D80  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2880  007D82  0BFD               	andlw	-3
  2881  007D84  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2882  007D86  6E8A               	movwf	3978,c	;volatile
  2883  007D88  C03F  F03D         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  2884  007D8C  0E01               	movlw	1
  2885  007D8E  163D               	andwf	??_Lcd_Chr_CP,f,c
  2886  007D90  508A               	movf	3978,w,c	;volatile
  2887  007D92  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2888  007D94  0BFE               	andlw	-2
  2889  007D96  183D               	xorwf	??_Lcd_Chr_CP,w,c
  2890  007D98  6E8A               	movwf	3978,c	;volatile
  2891                           
  2892                           ;lcd.h: 197: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  2893  007D9A  F000               	nop	
  2894  007D9C  F000               	nop	
  2895  007D9E  F000               	nop	
  2896  007DA0  F000               	nop	
  2897  007DA2  F000               	nop	
  2898  007DA4  F000               	nop	
  2899  007DA6  F000               	nop	
  2900  007DA8  F000               	nop	
  2901  007DAA  F000               	nop	
  2902  007DAC  F000               	nop	
  2903                           
  2904                           ;lcd.h: 198: LATBbits.LATB4 = 1; Delay_5us(); LATBbits.LATB4 = 0;
  2905  007DAE  888A               	bsf	3978,4,c	;volatile
  2906  007DB0  EC34  F03B         	call	_Delay_5us	;wreg free
  2907  007DB4  988A               	bcf	3978,4,c	;volatile
  2908                           
  2909                           ;lcd.h: 199: Delay_5us(); Delay_5500us();
  2910  007DB6  EC34  F03B         	call	_Delay_5us	;wreg free
  2911  007DBA  EC22  F03A         	call	_Delay_5500us	;wreg free
  2912  007DBE  0012               	return	
  2913  007DC0                     __end_of_Lcd_Chr_CP:
  2914                           	opt stack 0
  2915                           tblptru	equ	0xFF8
  2916                           tblptrh	equ	0xFF7
  2917                           tblptrl	equ	0xFF6
  2918                           tablat	equ	0xFF5
  2919                           prodh	equ	0xFF4
  2920                           prodl	equ	0xFF3
  2921                           postinc0	equ	0xFEE
  2922                           wreg	equ	0xFE8
  2923                           postdec1	equ	0xFE5
  2924                           fsr1l	equ	0xFE1
  2925                           indf2	equ	0xFDF
  2926                           fsr2h	equ	0xFDA
  2927                           fsr2l	equ	0xFD9
  2928                           status	equ	0xFD8
  2929                           
  2930 ;; *************** function _Delay_5us *****************
  2931 ;; Defined at:
  2932 ;;		line 91 in file "lcd.h"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;		None               void
  2939 ;; Registers used:
  2940 ;;		None
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2946 ;;      Params:         0       0       0       0       0       0       0       0       0
  2947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2949 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2950 ;;Total ram usage:        0 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_lcd_ini
  2957 ;;		_Lcd_Chr_CP
  2958 ;;		_Lcd_Cmd
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           	psect	text16
  2963  007668                     __ptext16:
  2964                           	opt stack 0
  2965  007668                     _Delay_5us:
  2966                           	opt stack 27
  2967                           
  2968                           ;lcd.h: 96: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __no
      +                          p(); __nop();
  2969                           
  2970                           ;incstack = 0
  2971  007668  F000               	nop	
  2972  00766A  F000               	nop	
  2973  00766C  F000               	nop	
  2974  00766E  F000               	nop	
  2975  007670  F000               	nop	
  2976  007672  F000               	nop	
  2977  007674  F000               	nop	
  2978  007676  F000               	nop	
  2979  007678  F000               	nop	
  2980  00767A  F000               	nop	
  2981                           
  2982                           ;lcd.h: 97: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __no
      +                          p(); __nop();
  2983  00767C  F000               	nop	
  2984  00767E  F000               	nop	
  2985  007680  F000               	nop	
  2986  007682  F000               	nop	
  2987  007684  F000               	nop	
  2988  007686  F000               	nop	
  2989  007688  F000               	nop	
  2990  00768A  F000               	nop	
  2991  00768C  F000               	nop	
  2992  00768E  F000               	nop	
  2993                           
  2994                           ;lcd.h: 98: __nop(); __nop(); __nop(); __nop(); __nop();
  2995  007690  F000               	nop	
  2996  007692  F000               	nop	
  2997  007694  F000               	nop	
  2998  007696  F000               	nop	
  2999  007698  F000               	nop	
  3000                           
  3001                           ;lcd.h: 99: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __no
      +                          p(); __nop();
  3002  00769A  F000               	nop	
  3003  00769C  F000               	nop	
  3004  00769E  F000               	nop	
  3005  0076A0  F000               	nop	
  3006  0076A2  F000               	nop	
  3007  0076A4  F000               	nop	
  3008  0076A6  F000               	nop	
  3009  0076A8  F000               	nop	
  3010  0076AA  F000               	nop	
  3011  0076AC  F000               	nop	
  3012                           
  3013                           ;lcd.h: 100: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  3014  0076AE  F000               	nop	
  3015  0076B0  F000               	nop	
  3016  0076B2  F000               	nop	
  3017  0076B4  F000               	nop	
  3018  0076B6  F000               	nop	
  3019  0076B8  F000               	nop	
  3020  0076BA  F000               	nop	
  3021  0076BC  F000               	nop	
  3022  0076BE  F000               	nop	
  3023  0076C0  F000               	nop	
  3024                           
  3025                           ;lcd.h: 101: __nop(); __nop(); __nop(); __nop(); __nop();
  3026  0076C2  F000               	nop	
  3027  0076C4  F000               	nop	
  3028  0076C6  F000               	nop	
  3029  0076C8  F000               	nop	
  3030  0076CA  F000               	nop	
  3031  0076CC  0012               	return	
  3032  0076CE                     __end_of_Delay_5us:
  3033                           	opt stack 0
  3034                           tblptru	equ	0xFF8
  3035                           tblptrh	equ	0xFF7
  3036                           tblptrl	equ	0xFF6
  3037                           tablat	equ	0xFF5
  3038                           prodh	equ	0xFF4
  3039                           prodl	equ	0xFF3
  3040                           postinc0	equ	0xFEE
  3041                           wreg	equ	0xFE8
  3042                           postdec1	equ	0xFE5
  3043                           fsr1l	equ	0xFE1
  3044                           indf2	equ	0xFDF
  3045                           fsr2h	equ	0xFDA
  3046                           fsr2l	equ	0xFD9
  3047                           status	equ	0xFD8
  3048                           
  3049 ;; *************** function _Delay_5500us *****************
  3050 ;; Defined at:
  3051 ;;		line 104 in file "lcd.h"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;		None               void
  3058 ;; Registers used:
  3059 ;;		wreg, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3065 ;;      Params:         0       0       0       0       0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3068 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3069 ;;Total ram usage:        0 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    2
  3072 ;; This function calls:
  3073 ;;		_Delay1KTCYx
  3074 ;; This function is called by:
  3075 ;;		_lcd_ini
  3076 ;;		_Lcd_Chr_CP
  3077 ;;		_Lcd_Cmd
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text17
  3082  007444                     __ptext17:
  3083                           	opt stack 0
  3084  007444                     _Delay_5500us:
  3085                           	opt stack 26
  3086                           
  3087                           ;lcd.h: 108: Delay1KTCYx(28);
  3088                           
  3089                           ;incstack = 0
  3090  007444  0E1C               	movlw	28
  3091  007446  EC26  F03A         	call	_Delay1KTCYx
  3092  00744A  0012               	return	
  3093  00744C                     __end_of_Delay_5500us:
  3094                           	opt stack 0
  3095                           tblptru	equ	0xFF8
  3096                           tblptrh	equ	0xFF7
  3097                           tblptrl	equ	0xFF6
  3098                           tablat	equ	0xFF5
  3099                           prodh	equ	0xFF4
  3100                           prodl	equ	0xFF3
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           postdec1	equ	0xFE5
  3104                           fsr1l	equ	0xFE1
  3105                           indf2	equ	0xFDF
  3106                           fsr2h	equ	0xFDA
  3107                           fsr2l	equ	0xFD9
  3108                           status	equ	0xFD8
  3109                           
  3110 ;; *************** function _Delay1KTCYx *****************
  3111 ;; Defined at:
  3112 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\pic18\d1ktcyx.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  unit            1    wreg     unsigned char 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  unit            1   14[COMRAM] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;		None               void
  3119 ;; Registers used:
  3120 ;;		wreg
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0
  3127 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3129 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3130 ;;Total ram usage:        1 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    1
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_tempo_ms
  3137 ;;		_Delay_5500us
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text18
  3142  00744C                     __ptext18:
  3143                           	opt stack 0
  3144  00744C                     _Delay1KTCYx:
  3145                           	opt stack 28
  3146                           
  3147                           ;incstack = 0
  3148                           ;Delay1KTCYx@unit stored from wreg
  3149  00744C  CFE8 F03C          	movff	wreg,Delay1KTCYx@unit
  3150  007450                     l752:
  3151  007450  0EFA               	movlw	250
  3152  007452                     u777:
  3153  007452  F000               	nop	
  3154  007454  2EE8               	decfsz	wreg,f,c
  3155  007456  D7FD               	goto	u777
  3156  007458  2E3C               	decfsz	Delay1KTCYx@unit,f,c
  3157  00745A  D7FA               	goto	l752
  3158  00745C  0012               	return	
  3159  00745E                     __end_of_Delay1KTCYx:
  3160                           	opt stack 0
  3161                           tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           prodh	equ	0xFF4
  3166                           prodl	equ	0xFF3
  3167                           postinc0	equ	0xFEE
  3168                           wreg	equ	0xFE8
  3169                           postdec1	equ	0xFE5
  3170                           fsr1l	equ	0xFE1
  3171                           indf2	equ	0xFDF
  3172                           fsr2h	equ	0xFDA
  3173                           fsr2l	equ	0xFD9
  3174                           status	equ	0xFD8
  3175                           
  3176 ;; *************** function _interrupcao *****************
  3177 ;; Defined at:
  3178 ;;		line 17 in file "ExemploLCD_CGRAM.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;		None
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;		None               void
  3185 ;; Registers used:
  3186 ;;		None
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3192 ;;      Params:         0       0       0       0       0       0       0       0       0
  3193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3194 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3195 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3196 ;;Total ram usage:       14 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		Interrupt level 2
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	intcode
  3206  001008                     __pintcode:
  3207                           	opt stack 0
  3208  001008                     _interrupcao:
  3209                           	opt stack 26
  3210                           
  3211                           ;incstack = 0
  3212  001008  CFFA F02E          	movff	pclath,??_interrupcao
  3213  00100C  CFFB F02F          	movff	pclatu,??_interrupcao+1
  3214  001010  CFE9 F030          	movff	fsr0l,??_interrupcao+2
  3215  001014  ED67  F03B         	call	int_func,f	;refresh shadow registers
  3216                           pclatu	equ	0xFFB
  3217                           pclath	equ	0xFFA
  3218                           tblptru	equ	0xFF8
  3219                           tblptrh	equ	0xFF7
  3220                           tblptrl	equ	0xFF6
  3221                           tablat	equ	0xFF5
  3222                           prodh	equ	0xFF4
  3223                           prodl	equ	0xFF3
  3224                           postinc0	equ	0xFEE
  3225                           fsr0l	equ	0xFE9
  3226                           wreg	equ	0xFE8
  3227                           postdec1	equ	0xFE5
  3228                           fsr1l	equ	0xFE1
  3229                           indf2	equ	0xFDF
  3230                           fsr2h	equ	0xFDA
  3231                           fsr2l	equ	0xFD9
  3232                           status	equ	0xFD8
  3233                           
  3234                           	psect	intcode_body
  3235  0076CE                     __pintcode_body:
  3236                           	opt stack 26
  3237  0076CE                     int_func:
  3238                           	opt stack 26
  3239  0076CE  0006               	pop		; remove dummy address from shadow register refresh
  3240  0076D0  CFEA F031          	movff	fsr0h,??_interrupcao+3
  3241  0076D4  CFE1 F032          	movff	fsr1l,??_interrupcao+4
  3242  0076D8  CFE2 F033          	movff	fsr1h,??_interrupcao+5
  3243  0076DC  CFD9 F034          	movff	fsr2l,??_interrupcao+6
  3244  0076E0  CFDA F035          	movff	fsr2h,??_interrupcao+7
  3245  0076E4  CFF3 F036          	movff	prodl,??_interrupcao+8
  3246  0076E8  CFF4 F037          	movff	prodh,??_interrupcao+9
  3247  0076EC  CFF6 F038          	movff	tblptrl,??_interrupcao+10
  3248  0076F0  CFF7 F039          	movff	tblptrh,??_interrupcao+11
  3249  0076F4  CFF8 F03A          	movff	tblptru,??_interrupcao+12
  3250  0076F8  CFF5 F03B          	movff	tablat,??_interrupcao+13
  3251  0076FC  C03B  FFF5         	movff	??_interrupcao+13,tablat
  3252  007700  C03A  FFF8         	movff	??_interrupcao+12,tblptru
  3253  007704  C039  FFF7         	movff	??_interrupcao+11,tblptrh
  3254  007708  C038  FFF6         	movff	??_interrupcao+10,tblptrl
  3255  00770C  C037  FFF4         	movff	??_interrupcao+9,prodh
  3256  007710  C036  FFF3         	movff	??_interrupcao+8,prodl
  3257  007714  C035  FFDA         	movff	??_interrupcao+7,fsr2h
  3258  007718  C034  FFD9         	movff	??_interrupcao+6,fsr2l
  3259  00771C  C033  FFE2         	movff	??_interrupcao+5,fsr1h
  3260  007720  C032  FFE1         	movff	??_interrupcao+4,fsr1l
  3261  007724  C031  FFEA         	movff	??_interrupcao+3,fsr0h
  3262  007728  C030  FFE9         	movff	??_interrupcao+2,fsr0l
  3263  00772C  C02F  FFFB         	movff	??_interrupcao+1,pclatu
  3264  007730  C02E  FFFA         	movff	??_interrupcao,pclath
  3265  007734  0011               	retfie		f
  3266  007736                     __end_of_interrupcao:
  3267                           	opt stack 0
  3268                           pclatu	equ	0xFFB
  3269                           pclath	equ	0xFFA
  3270                           tblptru	equ	0xFF8
  3271                           tblptrh	equ	0xFF7
  3272                           tblptrl	equ	0xFF6
  3273                           tablat	equ	0xFF5
  3274                           prodh	equ	0xFF4
  3275                           prodl	equ	0xFF3
  3276                           postinc0	equ	0xFEE
  3277                           fsr0h	equ	0xFEA
  3278                           fsr0l	equ	0xFE9
  3279                           wreg	equ	0xFE8
  3280                           postdec1	equ	0xFE5
  3281                           fsr1h	equ	0xFE2
  3282                           fsr1l	equ	0xFE1
  3283                           indf2	equ	0xFDF
  3284                           fsr2h	equ	0xFDA
  3285                           fsr2l	equ	0xFD9
  3286                           status	equ	0xFD8
  3287                           pclatu	equ	0xFFB
  3288                           pclath	equ	0xFFA
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           prodh	equ	0xFF4
  3294                           prodl	equ	0xFF3
  3295                           postinc0	equ	0xFEE
  3296                           fsr0h	equ	0xFEA
  3297                           fsr0l	equ	0xFE9
  3298                           wreg	equ	0xFE8
  3299                           postdec1	equ	0xFE5
  3300                           fsr1h	equ	0xFE2
  3301                           fsr1l	equ	0xFE1
  3302                           indf2	equ	0xFDF
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           
  3307                           	psect	rparam
  3308  0000                     pclatu	equ	0xFFB
  3309                           pclath	equ	0xFFA
  3310                           tblptru	equ	0xFF8
  3311                           tblptrh	equ	0xFF7
  3312                           tblptrl	equ	0xFF6
  3313                           tablat	equ	0xFF5
  3314                           prodh	equ	0xFF4
  3315                           prodl	equ	0xFF3
  3316                           postinc0	equ	0xFEE
  3317                           fsr0h	equ	0xFEA
  3318                           fsr0l	equ	0xFE9
  3319                           wreg	equ	0xFE8
  3320                           postdec1	equ	0xFE5
  3321                           fsr1h	equ	0xFE2
  3322                           fsr1l	equ	0xFE1
  3323                           indf2	equ	0xFDF
  3324                           fsr2h	equ	0xFDA
  3325                           fsr2l	equ	0xFD9
  3326                           status	equ	0xFD8


Data Sizes:
    Strings     29
    Constant    0
    Data        45
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      88
    BANK0           160      0      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    CGRAM_SanUSB@ptr	PTR unsigned char  size(2) Largest target is 8
		 -> b1(COMRAM[7]), vazio(COMRAM[8]), fecha2(COMRAM[8]), abre2(COMRAM[8]), 
		 -> fecha1(COMRAM[8]), abre1(COMRAM[8]), 

    lcd_escreve@buffer	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[14]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _tempo_ms->___wmul
    _lcd_ini->___awdiv
    _lcd_escreve->_Lcd_Chr_CP
    _lcd_escreve->_Lcd_Cmd
    _clock_int_48MHz->___lwdiv
    ___lwdiv->___awmod
    _Lcd_Chr->_Lcd_Chr_CP
    _Lcd_Chr->_Lcd_Cmd
    _CGRAM_SanUSB->_Lcd_Chr_CP
    _CGRAM_SanUSB->_Lcd_Cmd
    _Delay_5500us->_Delay1KTCYx

Critical Paths under _interrupcao in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6172
                                             29 COMRAM     2     2      0
                       _CGRAM_SanUSB
                            _Lcd_Chr
                            _Lcd_Cmd
                    _clock_int_48MHz
                  _habilita_canal_AD
                      _inverte_saida
                        _lcd_escreve
                            _lcd_ini
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _tempo_ms                                             4     2      2    1634
                                             20 COMRAM     4     2      2
                        _Delay1KTCYx
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     635
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_ini                                              2     2      0     753
                                             23 COMRAM     2     2      0
                       _Delay_5500us
                          _Delay_5us
                            _Lcd_Cmd
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     513
                                             14 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _lcd_escreve                                          5     2      3     602
                                             18 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _inverte_saida                                        4     2      2     227
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _habilita_canal_AD                                    1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _clock_int_48MHz                                      0     0      0     951
                            ___awmod
                            ___lwdiv
                          _le_eeprom
 ---------------------------------------------------------------------------------
 (2) _le_eeprom                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     635
                                             21 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     301
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Chr                                              4     2      2    1117
                                             18 COMRAM     4     2      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _CGRAM_SanUSB                                         8     6      2     738
                                             18 COMRAM     8     6      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     135
                                             15 COMRAM     3     3      0
                       _Delay_5500us
                          _Delay_5us
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     135
                                             15 COMRAM     3     3      0
                       _Delay_5500us
                          _Delay_5us
 ---------------------------------------------------------------------------------
 (3) _Delay_5us                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Delay_5500us                                         0     0      0      15
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupcao                                         14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CGRAM_SanUSB
     _Lcd_Chr_CP
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
   _Lcd_Chr
     _Lcd_Chr_CP
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
   _Lcd_Cmd
     _Delay_5500us
       _Delay1KTCYx
     _Delay_5us
   _clock_int_48MHz
     ___awmod
     ___lwdiv
       ___awmod (ARG)
     _le_eeprom
   _habilita_canal_AD
   _inverte_saida
   _lcd_escreve
     _Lcd_Chr_CP
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
   _lcd_ini
     _Delay_5500us
       _Delay1KTCYx
     _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
     ___awdiv
   _tempo_ms
     _Delay1KTCYx
     ___wmul

 _interrupcao (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      14       5       12.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      58       1       92.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6C      20        0.0%
DATA                 0      0      6C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Sun May 24 16:19:59 2015

                         _R 0001                           _i 004D                           _k 004F  
                         _s 0050                          u15 7B7C                          u25 7B98  
                        u35 7BBA                          u45 7CA4                          _b1 0027  
                        u55 7CC0                          u65 7CE2                ___awdiv@sign 0042  
                        _kl 0003         ___wmul@multiplicand 003E                 lcd_ini@data 0046  
         ??_clock_int_48MHz 004B                         l240 7978                         l241 797E  
                       l250 79B4                         l242 7984                         l234 795A  
                       l251 79BA                         l243 798A                         l252 79C0  
                       l244 7990                         l236 7960                         l253 79C6  
                       l245 7996                         l237 7966                         l510 780A  
                       l254 79CC                         l246 799C                         l238 796C  
                       l247 79A2                         l239 7972                         l255 7A5C  
                       l248 79A8                         l249 79AE       __end_of_inverte_saida 7A5E  
                       l456 7A82                         l288 7584                         l378 75C8  
                       l459 7AD2                         l752 7450                         _PR2 000FCB  
                       u335 77B6                         _REG 0005                         u777 7452  
              ___awmod@sign 0042                         wreg 000FE8                        l1054 765E  
                      l1700 78D4                        l1712 790E                        l1714 7916  
                      l1706 78F4                        l2346 7E7C                        l1804 79D2  
                      l1732 794E                        l1724 7936                        l1716 791A  
                      l1814 7592                        l1760 7886                        l1752 7866  
                      l1744 7838                        l1728 7940                        l2376 7F6E  
                      l1754 786E                        l1818 759C                        l1756 7872  
                      l1764 7890                        l1748 7854                        l1780 7634  
                      l1940 774E                        l1790 7654                        l1782 7638  
                      l1934 773C                        l1960 7540                        l1768 789E  
                      l1952 778C                        l1936 7742                        l1944 7756  
                      l1962 7546                        l1778 762C                        l1938 7748  
                      l1946 7770                        l1980 7802                        l1956 7534  
                      l1948 7778                        l1958 753A                        l1966 754E  
                      l1976 77EA                        l1968 7568                        STR_1 101D  
                      STR_2 102C                        _LATA 000F89                        _LATB 000F8A  
                      _LATC 000F8B                lcd_escreve@x 0040                lcd_escreve@y 0043  
                      _main 7DC0                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr0l 000FE9                        fsr2h 000FDA                        fsr1l 000FE1  
                      indf2 000FDF                        fsr2l 000FD9                        pclat 000FFA  
                      prodh 000FF4                        prodl 000FF3                        start 1018  
           __end_of_Lcd_Cmd 7C94             __end_of_Lcd_Chr 7576                  _Lcd_Chr_CP 7C94  
         inverte_saida@pino 003C                 _Delay1KTCYx 744C                       ?_main 002E  
           __end_of___awdiv 7958                       _ADRES 000FC3                       _EEADR 000FA9  
           __end_of___awmod 78A8                       _T0CON 000FD5             ___awdiv@divisor 003E  
                     _T2CON 000FCA             __end_of___lwdiv 7668             ___awdiv@counter 0041  
                     _RCSTA 000FAB                       _REGad 0006                       _TMR0H 000FD7  
                     _TMR1H 000FCF                       _TMR0L 000FD6                       _TMR3H 000FB3  
                     _TMR1L 000FCE                       _TMR3L 000FB2                       _SPBRG 000FAF  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TXREG 000FAD                       _TXSTA 000FAC             __end_of_lcd_ini 7B6C  
                     _abre1 0007                       _abre2 000F                       _vazio 0051  
                     tablat 000FF5                       status 000FD8             __initialization 74EC  
              ?_interrupcao 002E       __size_of_Delay_5500us 0008                __end_of_main 8000  
        __size_of_Delay_5us 0066                      ??_main 004B               __activetblptr 000002  
                    _ADCON0 000FC2                      _ADCON1 000FC1                      _ADCON2 000FC0  
                    _ADRESH 000FC4                      _EEDATA 000FA8                      _CCPR1L 000FBE  
                    _CCPR2L 000FBB                      _EECON1 000FA6                      _EECON2 000FA7  
          ___awdiv@dividend 003C       __size_of_CGRAM_SanUSB 006C                   ??_Lcd_Cmd 003D  
                 ??_Lcd_Chr 0042                _Delay_5500us 7444                      _SPBRGH 000FB0  
             CGRAM_SanUSB@i 0046               CGRAM_SanUSB@j 0047        __size_of_lcd_escreve 006A  
               ?_Lcd_Chr_CP 002E                      ___wmul 74B2                   ??___awdiv 0040  
                    _fecha1 0017                      _fecha2 001F                   ??___awmod 0040  
                 ??___lwdiv 0047                      clear_0 74F2                      clear_1 74FE  
          ___awdiv@quotient 0043             ___awmod@divisor 003E             ___awmod@counter 0041  
                 ??_lcd_ini 0045                __pdataCOMRAM 0001            __end_of_tempo_ms 75BE  
              _CGRAM_SanUSB 77A0                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8           __end_of_Delay_5us 76CE  
                __accesstop 0060     __end_of__initialization 7524             _clock_int_48MHz 75BE  
            __pcstackCOMRAM 002E           _habilita_canal_AD 745E          ?_habilita_canal_AD 002E  
        __size_of_le_eeprom 0014         __size_of_Lcd_Chr_CP 012C                  __pbssBANK0 0060  
          Lcd_Chr_CP@Chr_CP 003F         ??_habilita_canal_AD 003C                     ?___wmul 003C  
      __size_of_interrupcao 672E                     _CCP1CON 000FBD                     _CCP2CON 000FBA  
              ?_Delay1KTCYx 002E                     _BAUDCON 000FB8   __end_of_habilita_canal_AD 7470  
   __end_of_clock_int_48MHz 7612                     _Lcd_Cmd 7B6C                     _Lcd_Chr 752E  
    __size_of_inverte_saida 0106                     __Hparam 0000                     __Lparam 0000  
                 ?_tempo_ms 0042           __end_of_le_eeprom 7484                     ___awdiv 78A8  
                   ___awmod 780C        CGRAM_SanUSB@location 0045             __size_of___wmul 003A  
                   ___lwdiv 7612                __psmallconst 101C             lcd_escreve@data 0044  
                   __pcinit 74EC                     __ramtop 0800                     __ptext0 7DC0  
                   __ptext1 7576                     __ptext2 74B2                     __ptext3 7A5E  
                   __ptext4 78A8                     __ptext5 7736                     __ptext6 7958  
                   __ptext7 745E                     __ptext8 75BE                     __ptext9 7470  
                   _buffer1 0060                     _lcd_ini 7A5E                   _T0CONbits 000FD5  
                 _T1CONbits 000FCD                   _T2CONbits 000FCA                   _T3CONbits 000FB1  
          ___awmod@dividend 003C              __pintcode_body 76CE        end_of_initialization 7524  
             __Lmediumconst 0000                     int_func 76CE                  ??_tempo_ms 0044  
              ??_Lcd_Chr_CP 003D                     postdec1 000FE5                     postinc0 000FEE  
__size_of_habilita_canal_AD 0012                   _PORTAbits 000F80                   _PORTBbits 000F81  
                 _PORTCbits 000F82                   _PORTDbits 000F83               _inverte_saida 7958  
                 _TRISAbits 000F92                   _TRISBbits 000F93                   _TRISCbits 000F94  
                 _TRISDbits 000F95          __end_of_Lcd_Chr_CP 7DC0            ?_clock_int_48MHz 002E  
                 _TXSTAbits 000FAC                   _Delay_5us 7668               ??_lcd_escreve 0043  
            __end_of___wmul 74EC                 _BAUDCONbits 000FB8               __pidataCOMRAM 7485  
            ?_inverte_saida 003C        __size_of_Delay1KTCYx 0012         start_initialization 74EC  
                ?_Delay_5us 002E                    ??___wmul 0040         __end_of_lcd_escreve 77A0  
               __pbssCOMRAM 004D         __end_of__stringdata 103A             Delay1KTCYx@unit 003C  
         lcd_escreve@buffer 0041                    ?_Lcd_Cmd 002E                    ?_Lcd_Chr 0040  
          ___lwdiv@dividend 0043               ??_interrupcao 002E                   __pintcode 1008  
                  ?___awdiv 003C                    ?___awmod 003C                    ?___lwdiv 0043  
         __size_of_tempo_ms 0048             ??_inverte_saida 003E                   _le_eeprom 7470  
                  ?_lcd_ini 002E                 __smallconst 101C            ___lwdiv@quotient 0048  
             ?_Delay_5500us 002E              ___wmul@product 0040                    _LATBbits 000F8A  
                  _IPR1bits 000F9F                    _PIE1bits 000F9D                    _PIE2bits 000FA0  
               ??_Delay_5us 003C                 _lcd_escreve 7736                    Lcd_Chr@x 0040  
                  Lcd_Chr@y 0042                    _RCONbits 000FD0                  ?_le_eeprom 002E  
       __end_of_interrupcao 7736                  _ADCON0bits 000FC2                 __stringdata 101D  
                _ADCON2bits 000FC0           ___wmul@multiplier 003C               ?_CGRAM_SanUSB 0040  
           CGRAM_SanUSB@ptr 0040                 _INTCON2bits 000FF1                 _INTCON3bits 000FF0  
                 copy_data0 7518              ??_Delay_5500us 003D            __size_of_Lcd_Cmd 0128  
          __size_of_Lcd_Chr 0048                  _EECON1bits 000FA6                    __Hrparam 0000  
                  __Lrparam 0000      habilita_canal_AD@canal 003C            __size_of___awdiv 00B0  
          __size_of___awmod 009C            __size_of___lwdiv 0056              ??_CGRAM_SanUSB 0042  
          __size_of_lcd_ini 010E             ___lwdiv@divisor 0045             ___lwdiv@counter 004A  
                  __ptext10 7612                    __ptext11 780C                    __ptext12 752E  
                  __ptext13 77A0                    __ptext14 7B6C                    __ptext15 7C94  
                  __ptext16 7668                    __ptext17 7444                    __ptext18 744C  
               Lcd_Chr@data 0043               __size_of_main 0240    __size_of_clock_int_48MHz 0054  
               _interrupcao 1008                   tempo_ms@i 0042                    _tempo_ms 7576  
                 tempo_ms@k 0044           le_eeprom@endereco 003C               ??_Delay1KTCYx 003C  
               ??_le_eeprom 003C                  _INTCONbits 000FF2                    intlevel2 0000  
                Lcd_Cmd@Cmd 003F                  Lcd_Chr@Chr 0041        __end_of_Delay_5500us 744C  
       __end_of_Delay1KTCYx 745E                  _WDTCONbits 000FD1        __end_of_CGRAM_SanUSB 780C  
              ?_lcd_escreve 0040  
